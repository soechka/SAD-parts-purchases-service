/*
 * This file is generated by jOOQ.
 */
package com.example.sadbe.tables.daos;


import com.example.sadbe.tables.SuppliedParts;
import com.example.sadbe.tables.records.SuppliedPartsRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class SuppliedPartsDao extends DAOImpl<SuppliedPartsRecord, com.example.sadbe.tables.pojos.SuppliedParts, UUID> {

    /**
     * Create a new SuppliedPartsDao without any configuration
     */
    public SuppliedPartsDao() {
        super(SuppliedParts.SUPPLIED_PARTS, com.example.sadbe.tables.pojos.SuppliedParts.class);
    }

    /**
     * Create a new SuppliedPartsDao with an attached configuration
     */
    @Autowired
    public SuppliedPartsDao(Configuration configuration) {
        super(SuppliedParts.SUPPLIED_PARTS, com.example.sadbe.tables.pojos.SuppliedParts.class, configuration);
    }

    @Override
    public UUID getId(com.example.sadbe.tables.pojos.SuppliedParts object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.sadbe.tables.pojos.SuppliedParts> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(SuppliedParts.SUPPLIED_PARTS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.example.sadbe.tables.pojos.SuppliedParts> fetchById(UUID... values) {
        return fetch(SuppliedParts.SUPPLIED_PARTS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.example.sadbe.tables.pojos.SuppliedParts fetchOneById(UUID value) {
        return fetchOne(SuppliedParts.SUPPLIED_PARTS.ID, value);
    }

    /**
     * Fetch records that have <code>entity_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.sadbe.tables.pojos.SuppliedParts> fetchRangeOfEntityId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(SuppliedParts.SUPPLIED_PARTS.ENTITY_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>entity_id IN (values)</code>
     */
    public List<com.example.sadbe.tables.pojos.SuppliedParts> fetchByEntityId(UUID... values) {
        return fetch(SuppliedParts.SUPPLIED_PARTS.ENTITY_ID, values);
    }

    /**
     * Fetch records that have <code>part BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.sadbe.tables.pojos.SuppliedParts> fetchRangeOfPart(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(SuppliedParts.SUPPLIED_PARTS.PART, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>part IN (values)</code>
     */
    public List<com.example.sadbe.tables.pojos.SuppliedParts> fetchByPart(UUID... values) {
        return fetch(SuppliedParts.SUPPLIED_PARTS.PART, values);
    }

    /**
     * Fetch records that have <code>date BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.sadbe.tables.pojos.SuppliedParts> fetchRangeOfDate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(SuppliedParts.SUPPLIED_PARTS.DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>date IN (values)</code>
     */
    public List<com.example.sadbe.tables.pojos.SuppliedParts> fetchByDate(LocalDateTime... values) {
        return fetch(SuppliedParts.SUPPLIED_PARTS.DATE, values);
    }

    /**
     * Fetch records that have <code>cost BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.sadbe.tables.pojos.SuppliedParts> fetchRangeOfCost(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(SuppliedParts.SUPPLIED_PARTS.COST, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>cost IN (values)</code>
     */
    public List<com.example.sadbe.tables.pojos.SuppliedParts> fetchByCost(Long... values) {
        return fetch(SuppliedParts.SUPPLIED_PARTS.COST, values);
    }

    /**
     * Fetch records that have <code>supplier BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.sadbe.tables.pojos.SuppliedParts> fetchRangeOfSupplier(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(SuppliedParts.SUPPLIED_PARTS.SUPPLIER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>supplier IN (values)</code>
     */
    public List<com.example.sadbe.tables.pojos.SuppliedParts> fetchBySupplier(UUID... values) {
        return fetch(SuppliedParts.SUPPLIED_PARTS.SUPPLIER, values);
    }

    /**
     * Fetch records that have <code>datetime_of_creation BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.sadbe.tables.pojos.SuppliedParts> fetchRangeOfDatetimeOfCreation(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(SuppliedParts.SUPPLIED_PARTS.DATETIME_OF_CREATION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>datetime_of_creation IN (values)</code>
     */
    public List<com.example.sadbe.tables.pojos.SuppliedParts> fetchByDatetimeOfCreation(LocalDateTime... values) {
        return fetch(SuppliedParts.SUPPLIED_PARTS.DATETIME_OF_CREATION, values);
    }

    /**
     * Fetch records that have <code>datetime_of_delete BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.sadbe.tables.pojos.SuppliedParts> fetchRangeOfDatetimeOfDelete(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(SuppliedParts.SUPPLIED_PARTS.DATETIME_OF_DELETE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>datetime_of_delete IN (values)</code>
     */
    public List<com.example.sadbe.tables.pojos.SuppliedParts> fetchByDatetimeOfDelete(LocalDateTime... values) {
        return fetch(SuppliedParts.SUPPLIED_PARTS.DATETIME_OF_DELETE, values);
    }
}
