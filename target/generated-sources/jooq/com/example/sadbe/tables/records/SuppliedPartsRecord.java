/*
 * This file is generated by jOOQ.
 */
package com.example.sadbe.tables.records;


import com.example.sadbe.tables.SuppliedParts;

import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SuppliedPartsRecord extends UpdatableRecordImpl<SuppliedPartsRecord> implements Record8<UUID, UUID, UUID, LocalDateTime, Long, UUID, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>sad.supplied_parts.id</code>.
     */
    public SuppliedPartsRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>sad.supplied_parts.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>sad.supplied_parts.entity_id</code>.
     */
    public SuppliedPartsRecord setEntityId(UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>sad.supplied_parts.entity_id</code>.
     */
    public UUID getEntityId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>sad.supplied_parts.part</code>.
     */
    public SuppliedPartsRecord setPart(UUID value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>sad.supplied_parts.part</code>.
     */
    public UUID getPart() {
        return (UUID) get(2);
    }

    /**
     * Setter for <code>sad.supplied_parts.date</code>.
     */
    public SuppliedPartsRecord setDate(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>sad.supplied_parts.date</code>.
     */
    public LocalDateTime getDate() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>sad.supplied_parts.cost</code>.
     */
    public SuppliedPartsRecord setCost(Long value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>sad.supplied_parts.cost</code>.
     */
    public Long getCost() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>sad.supplied_parts.supplier</code>.
     */
    public SuppliedPartsRecord setSupplier(UUID value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>sad.supplied_parts.supplier</code>.
     */
    public UUID getSupplier() {
        return (UUID) get(5);
    }

    /**
     * Setter for <code>sad.supplied_parts.datetime_of_creation</code>.
     */
    public SuppliedPartsRecord setDatetimeOfCreation(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>sad.supplied_parts.datetime_of_creation</code>.
     */
    public LocalDateTime getDatetimeOfCreation() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>sad.supplied_parts.datetime_of_delete</code>.
     */
    public SuppliedPartsRecord setDatetimeOfDelete(LocalDateTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>sad.supplied_parts.datetime_of_delete</code>.
     */
    public LocalDateTime getDatetimeOfDelete() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<UUID, UUID, UUID, LocalDateTime, Long, UUID, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<UUID, UUID, UUID, LocalDateTime, Long, UUID, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return SuppliedParts.SUPPLIED_PARTS.ID;
    }

    @Override
    public Field<UUID> field2() {
        return SuppliedParts.SUPPLIED_PARTS.ENTITY_ID;
    }

    @Override
    public Field<UUID> field3() {
        return SuppliedParts.SUPPLIED_PARTS.PART;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return SuppliedParts.SUPPLIED_PARTS.DATE;
    }

    @Override
    public Field<Long> field5() {
        return SuppliedParts.SUPPLIED_PARTS.COST;
    }

    @Override
    public Field<UUID> field6() {
        return SuppliedParts.SUPPLIED_PARTS.SUPPLIER;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return SuppliedParts.SUPPLIED_PARTS.DATETIME_OF_CREATION;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return SuppliedParts.SUPPLIED_PARTS.DATETIME_OF_DELETE;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public UUID component2() {
        return getEntityId();
    }

    @Override
    public UUID component3() {
        return getPart();
    }

    @Override
    public LocalDateTime component4() {
        return getDate();
    }

    @Override
    public Long component5() {
        return getCost();
    }

    @Override
    public UUID component6() {
        return getSupplier();
    }

    @Override
    public LocalDateTime component7() {
        return getDatetimeOfCreation();
    }

    @Override
    public LocalDateTime component8() {
        return getDatetimeOfDelete();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public UUID value2() {
        return getEntityId();
    }

    @Override
    public UUID value3() {
        return getPart();
    }

    @Override
    public LocalDateTime value4() {
        return getDate();
    }

    @Override
    public Long value5() {
        return getCost();
    }

    @Override
    public UUID value6() {
        return getSupplier();
    }

    @Override
    public LocalDateTime value7() {
        return getDatetimeOfCreation();
    }

    @Override
    public LocalDateTime value8() {
        return getDatetimeOfDelete();
    }

    @Override
    public SuppliedPartsRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public SuppliedPartsRecord value2(UUID value) {
        setEntityId(value);
        return this;
    }

    @Override
    public SuppliedPartsRecord value3(UUID value) {
        setPart(value);
        return this;
    }

    @Override
    public SuppliedPartsRecord value4(LocalDateTime value) {
        setDate(value);
        return this;
    }

    @Override
    public SuppliedPartsRecord value5(Long value) {
        setCost(value);
        return this;
    }

    @Override
    public SuppliedPartsRecord value6(UUID value) {
        setSupplier(value);
        return this;
    }

    @Override
    public SuppliedPartsRecord value7(LocalDateTime value) {
        setDatetimeOfCreation(value);
        return this;
    }

    @Override
    public SuppliedPartsRecord value8(LocalDateTime value) {
        setDatetimeOfDelete(value);
        return this;
    }

    @Override
    public SuppliedPartsRecord values(UUID value1, UUID value2, UUID value3, LocalDateTime value4, Long value5, UUID value6, LocalDateTime value7, LocalDateTime value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SuppliedPartsRecord
     */
    public SuppliedPartsRecord() {
        super(SuppliedParts.SUPPLIED_PARTS);
    }

    /**
     * Create a detached, initialised SuppliedPartsRecord
     */
    public SuppliedPartsRecord(UUID id, UUID entityId, UUID part, LocalDateTime date, Long cost, UUID supplier, LocalDateTime datetimeOfCreation, LocalDateTime datetimeOfDelete) {
        super(SuppliedParts.SUPPLIED_PARTS);

        setId(id);
        setEntityId(entityId);
        setPart(part);
        setDate(date);
        setCost(cost);
        setSupplier(supplier);
        setDatetimeOfCreation(datetimeOfCreation);
        setDatetimeOfDelete(datetimeOfDelete);
    }
}
