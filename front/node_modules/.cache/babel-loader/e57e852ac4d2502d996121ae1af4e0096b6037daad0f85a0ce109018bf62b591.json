{"ast":null,"code":"export default {\n  name: \"TableComponent\",\n  data() {\n    let context = {\n      totalRows: 1,\n      totalPages: 1,\n      perPage: 5,\n      currentPage: 1,\n      size: 0,\n      sort: {\n        by: this.fields[0].key,\n        desc: false\n      },\n      filters: {},\n      error: null\n    };\n    console.log(\"поля\", this.fields);\n    this.fields.forEach(field => {\n      if (field.filtrable) {\n        context.filters[field.key] = \"\";\n      }\n    });\n    return {\n      pIsBusy: false,\n      pContext: context,\n      pPageOptions: [5, 10, 20, 50, 100],\n      pFilter: null\n    };\n  },\n  props: {\n    fields: Array,\n    dataProvider: Function\n  },\n  computed: {\n    isBusy: {\n      get: function () {\n        return this.pIsBusy;\n      },\n      set: function (newValue) {\n        this.pIsBusy = newValue;\n      }\n    },\n    totalRows: function () {\n      return this.pContext.totalRows;\n    },\n    totalPages: function () {\n      return this.pContext.totalPages;\n    },\n    currentPage: function () {\n      return this.pContext.currentPage;\n    },\n    perPage: function () {\n      return this.pContext.perPage;\n    }\n  },\n  methods: {\n    addItem() {\n      this.$emit(\"itemAdd\");\n    },\n    removeItem(item) {\n      this.$emit(\"itemRemove\", item);\n    },\n    editItem(item) {\n      this.$emit(\"itemEdit\", item);\n    },\n    update() {\n      this.pIsBusy = true;\n      // Костыль, чтобы обновить фильтр\n      this.pFilter = this.pFilter == \"a\" ? \"b\" : \"a\";\n      this.pIsBusy = false;\n    },\n    getItems() {\n      this.pIsBusy = true;\n      this.pContext.error = null;\n      let data = this.dataProvider(this.pContext);\n      console.log(\"lolkek\", data);\n      this.pIsBusy = false;\n      return data;\n    }\n  }\n};","map":{"version":3,"names":["name","data","context","totalRows","totalPages","perPage","currentPage","size","sort","by","fields","key","desc","filters","error","console","log","forEach","field","filtrable","pIsBusy","pContext","pPageOptions","pFilter","props","Array","dataProvider","Function","computed","isBusy","get","set","newValue","methods","addItem","$emit","removeItem","item","editItem","update","getItems"],"sources":["src/components/TableComponent.vue"],"sourcesContent":["<template>\r\n  <b-container fluid>\r\n    <b-row>\r\n      <b-col cols=\"auto\">\r\n        <b-form-group\r\n          label=\"Отображать по\"\r\n          label-for=\"per-page-select\"\r\n          label-cols=\"auto\"\r\n          label-align-sm=\"left\"\r\n          label-size=\"sm\"\r\n        >\r\n          <b-form-select\r\n            id=\"per-page-select\"\r\n            v-model=\"pContext.perPage\"\r\n            :options=\"pPageOptions\"\r\n            size=\"sm\"\r\n          ></b-form-select>\r\n        </b-form-group>\r\n      </b-col>\r\n\r\n      <b-col></b-col>\r\n\r\n      <b-col>\r\n        <div align=\"end\">\r\n          <b-button\r\n            size=\"sm\"\r\n            variant=\"primary\"\r\n            @click=\"addItem\"\r\n          >Добавить</b-button>\r\n        </div>\r\n      </b-col>\r\n    </b-row>\r\n\r\n    <!--  :sticky-header=\"true\"\r\n          :no-border-collapse=\"true\"\r\n           -->\r\n    <b-table\r\n      striped\r\n      hover\r\n      bordered\r\n      show-empty\r\n      :filter=\"pFilter\"\r\n      :items=\"getItems\"\r\n      :fields=\"fields\"\r\n      :current-page=\"pContext.currentPage\"\r\n      :per-page=\"pContext.perPage\"\r\n      :sort-by.sync=\"pContext.sort.by\"\r\n      :sort-desc.sync=\"pContext.sort.desc\"\r\n    >\r\n      <template #cell(actions)=\"data\">\r\n        <div>\r\n          <b-button\r\n            v-if=\"data.field.editable == true || data.field.editable == undefined\"\r\n            class=\"actionButton\"\r\n            variant=\"primary\"\r\n            @click=\"editItem(data.item)\"\r\n            size=\"sm\"\r\n          > <b-icon icon=\"pencil-square\"></b-icon>\r\n          </b-button>\r\n          <b-button\r\n            v-if=\"data.field.removable == true || data.field.removable == undefined\"\r\n            @click=\"removeItem(data.item)\"\r\n            variant=\"danger\"\r\n            size=\"sm\"\r\n          >\r\n            <b-icon icon=\"trash-fill\"></b-icon>\r\n          </b-button>\r\n        </div>\r\n      </template>\r\n\r\n      <template #head()=\"scope\">\r\n        <div>\r\n          <div>\r\n            <span>{{ scope.label }}</span>\r\n          </div>\r\n\r\n          <div v-if=\"scope.field.filtrable\">\r\n            <b-input-group size=\"sm\">\r\n              <b-form-input\r\n                id=\"filter-input\"\r\n                type=\"search\"\r\n                placeholder=\"Введите для поиска\"\r\n                v-model=\"pContext.filters[scope.field.key]\"\r\n                @update=\"update\"\r\n                debounce=\"500\"\r\n              ></b-form-input>\r\n            </b-input-group>\r\n          </div>\r\n\r\n          <div\r\n            v-else\r\n            class=\"block\"\r\n          >\r\n          </div>\r\n        </div>\r\n      </template>\r\n\r\n      <template #empty>\r\n        <p v-if=\"pContext.error == null\">Записи отсутствуют</p>\r\n        <p v-else>Произошла ошибка: {{ pContext.error }}</p>\r\n      </template>\r\n\r\n      <template #table-busy>\r\n        <p>Гружусь...</p>\r\n      </template>\r\n\r\n      <template #emptyfiltered>\r\n      <p>По вашему запросу ничего не нашлось :(</p>\r\n    </template>\r\n    </b-table>\r\n\r\n    <b-row>\r\n      <b-col>\r\n        <div align=\"start\">\r\n          <p v-if=\"pContext.size == 0\">\r\n            Записей нет\r\n          </p>\r\n          <p v-else> Отображено с {{ (pContext.currentPage - 1) * pContext.perPage + 1 }} по {{ (pContext.currentPage - 1)\r\n            * pContext.perPage + pContext.size }} записей из {{ pContext.totalRows }} </p>\r\n        </div>\r\n      </b-col>\r\n      <b-col cols=\"4\">\r\n        <b-pagination\r\n          v-model=\"pContext.currentPage\"\r\n          :total-rows=\"pContext.totalRows\"\r\n          :per-page=\"pContext.perPage\"\r\n          align=\"fill\"\r\n          size=\"sm\"\r\n          class=\"my-0\"\r\n        ></b-pagination>\r\n      </b-col>\r\n    </b-row>\r\n  </b-container>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"TableComponent\",\r\n  data() {\r\n    let context = {\r\n      totalRows: 1,\r\n      totalPages: 1,\r\n      perPage: 5,\r\n      currentPage: 1,\r\n      size: 0,\r\n      sort: {\r\n        by: this.fields[0].key,\r\n        desc: false,\r\n      },\r\n      filters: {},\r\n      error: null\r\n    };\r\n    console.log(\"поля\", this.fields);\r\n    this.fields.forEach(field => {\r\n      if (field.filtrable) {\r\n        context.filters[field.key] = \"\";\r\n      }\r\n    });\r\n\r\n    return {\r\n      pIsBusy: false,\r\n\r\n      pContext: context,\r\n\r\n      pPageOptions: [5, 10, 20, 50, 100],\r\n\r\n      pFilter: null,\r\n    }\r\n  },\r\n\r\n  props: {\r\n    fields: Array,\r\n    dataProvider: Function\r\n  },\r\n\r\n  computed: {\r\n    isBusy: {\r\n      get: function () {\r\n        return this.pIsBusy;\r\n      },\r\n      set: function (newValue) {\r\n        this.pIsBusy = newValue;\r\n      }\r\n    },\r\n    totalRows: function () {\r\n      return this.pContext.totalRows;\r\n    },\r\n    totalPages: function () {\r\n      return this.pContext.totalPages;\r\n    },\r\n    currentPage: function () {\r\n      return this.pContext.currentPage;\r\n    },\r\n    perPage: function () {\r\n      return this.pContext.perPage;\r\n    },\r\n  },\r\n\r\n\r\n  methods: {\r\n    addItem() {\r\n      this.$emit(\"itemAdd\");\r\n    },\r\n    removeItem(item) {\r\n      this.$emit(\"itemRemove\", item);\r\n    },\r\n    editItem(item) {\r\n      this.$emit(\"itemEdit\", item);\r\n    },\r\n\r\n    update() {\r\n      this.pIsBusy = true;\r\n      // Костыль, чтобы обновить фильтр\r\n      this.pFilter = this.pFilter == \"a\" ? \"b\" : \"a\";\r\n      this.pIsBusy = false;\r\n    },\r\n    getItems() {\r\n      this.pIsBusy = true;\r\n      this.pContext.error = null;\r\n      let data = this.dataProvider(this.pContext);\r\n      console.log(\"lolkek\", data);\r\n      this.pIsBusy = false;\r\n      return data;\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style>\r\n.block {\r\n  height: 31px;\r\n}\r\n\r\n.actionButton {\r\n  margin-right: 10px;\r\n}\r\n</style>\r\n"],"mappings":"AAwIA;EACAA,IAAA;EACAC,KAAA;IACA,IAAAC,OAAA;MACAC,SAAA;MACAC,UAAA;MACAC,OAAA;MACAC,WAAA;MACAC,IAAA;MACAC,IAAA;QACAC,EAAA,OAAAC,MAAA,IAAAC,GAAA;QACAC,IAAA;MACA;MACAC,OAAA;MACAC,KAAA;IACA;IACAC,OAAA,CAAAC,GAAA,cAAAN,MAAA;IACA,KAAAA,MAAA,CAAAO,OAAA,CAAAC,KAAA;MACA,IAAAA,KAAA,CAAAC,SAAA;QACAjB,OAAA,CAAAW,OAAA,CAAAK,KAAA,CAAAP,GAAA;MACA;IACA;IAEA;MACAS,OAAA;MAEAC,QAAA,EAAAnB,OAAA;MAEAoB,YAAA;MAEAC,OAAA;IACA;EACA;EAEAC,KAAA;IACAd,MAAA,EAAAe,KAAA;IACAC,YAAA,EAAAC;EACA;EAEAC,QAAA;IACAC,MAAA;MACAC,GAAA,WAAAA,CAAA;QACA,YAAAV,OAAA;MACA;MACAW,GAAA,WAAAA,CAAAC,QAAA;QACA,KAAAZ,OAAA,GAAAY,QAAA;MACA;IACA;IACA7B,SAAA,WAAAA,CAAA;MACA,YAAAkB,QAAA,CAAAlB,SAAA;IACA;IACAC,UAAA,WAAAA,CAAA;MACA,YAAAiB,QAAA,CAAAjB,UAAA;IACA;IACAE,WAAA,WAAAA,CAAA;MACA,YAAAe,QAAA,CAAAf,WAAA;IACA;IACAD,OAAA,WAAAA,CAAA;MACA,YAAAgB,QAAA,CAAAhB,OAAA;IACA;EACA;EAGA4B,OAAA;IACAC,QAAA;MACA,KAAAC,KAAA;IACA;IACAC,WAAAC,IAAA;MACA,KAAAF,KAAA,eAAAE,IAAA;IACA;IACAC,SAAAD,IAAA;MACA,KAAAF,KAAA,aAAAE,IAAA;IACA;IAEAE,OAAA;MACA,KAAAnB,OAAA;MACA;MACA,KAAAG,OAAA,QAAAA,OAAA;MACA,KAAAH,OAAA;IACA;IACAoB,SAAA;MACA,KAAApB,OAAA;MACA,KAAAC,QAAA,CAAAP,KAAA;MACA,IAAAb,IAAA,QAAAyB,YAAA,MAAAL,QAAA;MACAN,OAAA,CAAAC,GAAA,WAAAf,IAAA;MACA,KAAAmB,OAAA;MACA,OAAAnB,IAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}