{"ast":null,"code":"import TableComponent from \"@/components/TableComponent.vue\";\nimport RemoveModalComponent from \"@/components/RemoveModalComponent.vue\";\nimport DetailModalComponent from \"@/components/DetailModalComponent.vue\";\nimport CRUDService from \"@/services/CRUDService.js\";\nimport MessageService from \"@/services/MessageService\";\nexport default {\n  name: \"DetailsView\",\n  components: {\n    TableComponent,\n    RemoveModalComponent,\n    DetailModalComponent\n  },\n  data() {\n    return {\n      fields: [{\n        key: \"name\",\n        sortable: true,\n        label: \"Название\",\n        filtrable: true\n      }, {\n        key: \"partNumber\",\n        sortable: true,\n        filtrable: true,\n        label: \"Артикул\"\n      }, {\n        key: \"note\",\n        sortable: true,\n        filtrable: true,\n        label: \"Примечание\"\n      }, {\n        key: \"actions\",\n        label: \"Действия\",\n        stickyColumn: true\n      }]\n    };\n  },\n  props: {\n    user: {\n      type: Object,\n      required: true\n    },\n    crud: {\n      type: CRUDService,\n      required: true\n    },\n    messageService: {\n      type: MessageService,\n      required: true\n    }\n  },\n  methods: {\n    detailPresenter(detail) {\n      return detail.name + \" \" + detail.partNumber;\n    },\n    addTableItemHandler() {\n      this.$refs[\"CreateItemModal\"].show();\n    },\n    removeTableItemHandler(item) {\n      this.$refs[\"RemoveItemModal\"].show(item);\n    },\n    editTableItemHandler(item) {\n      this.$refs[\"EditItemModal\"].show(item);\n    },\n    removeItem(item, modalEvent) {\n      modalEvent.preventDefault();\n      this.crud.removeDetail(item.entityId).then(() => {\n        this.$refs[\"RemoveItemModal\"].close();\n        this.messageService.showDelete(this.detailPresenter(item));\n        this.$refs[\"table\"].update();\n      }).catch(err => {\n        this.messageService.showError(err.message);\n      });\n    },\n    addItem(item, modalEvent) {\n      modalEvent.preventDefault();\n      this.crud.addDetail(item).then(() => {\n        this.$refs[\"CreateItemModal\"].close();\n        this.messageService.showCreate(this.detailPresenter(item));\n        this.$refs[\"table\"].update();\n      }).catch(err => {\n        this.messageService.showError(err.message);\n      });\n    },\n    updateItem(item, modalEvent) {\n      modalEvent.preventDefault();\n      this.crud.updateDetail(item.entityId, item).then(() => {\n        this.$refs[\"EditItemModal\"].close();\n        this.messageService.showUpdate(this.detailPresenter(item));\n        this.$refs[\"table\"].update();\n      }).catch(err => {\n        this.messageService.showError(err.message);\n      });\n    },\n    dataProvider(ctx) {\n      return this.crud.getDetails(ctx).catch(data => {\n        this.messageService.showError(\"Не удалось получить данные\");\n        return data;\n      });\n    }\n  }\n};","map":{"version":3,"names":["TableComponent","RemoveModalComponent","DetailModalComponent","CRUDService","MessageService","name","components","data","fields","key","sortable","label","filtrable","stickyColumn","props","user","type","Object","required","crud","messageService","methods","detailPresenter","detail","partNumber","addTableItemHandler","$refs","show","removeTableItemHandler","item","editTableItemHandler","removeItem","modalEvent","preventDefault","removeDetail","entityId","then","close","showDelete","update","catch","err","showError","message","addItem","addDetail","showCreate","updateItem","updateDetail","showUpdate","dataProvider","ctx","getDetails"],"sources":["src/views/DetailsView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <TableComponent\r\n      ref=\"table\"\r\n      :fields=\"fields\"\r\n      v-on:itemAdd=\"addTableItemHandler\"\r\n      v-on:itemRemove=\"removeTableItemHandler\"\r\n      v-on:itemEdit=\"editTableItemHandler\"\r\n      :dataProvider=\"dataProvider\"\r\n    ></TableComponent>\r\n    <div>\r\n      <RemoveModalComponent\r\n        ref=\"RemoveItemModal\"\r\n        :contentPresenter=\"value => detailPresenter(value)\"\r\n        :okHandler=\"removeItem\"\r\n      ></RemoveModalComponent>\r\n\r\n      <DetailModalComponent\r\n        :crud=\"crud\"\r\n        ref=\"CreateItemModal\"\r\n        title=\"Создание записи o детали\"\r\n        :submitHandler=\"addItem\"\r\n      >\r\n      </DetailModalComponent>\r\n      <DetailModalComponent\r\n        :crud=\"crud\"\r\n        ref=\"EditItemModal\"\r\n        title=\"Редактирование записи o детали\"\r\n        :submitHandler=\"updateItem\"\r\n      >\r\n\r\n      </DetailModalComponent>\r\n    </div>\r\n  </div>\r\n</template>\r\n  \r\n<script>\r\nimport TableComponent from \"@/components/TableComponent.vue\"\r\nimport RemoveModalComponent from \"@/components/RemoveModalComponent.vue\"\r\nimport DetailModalComponent from \"@/components/DetailModalComponent.vue\"\r\nimport CRUDService from \"@/services/CRUDService.js\"\r\nimport MessageService from \"@/services/MessageService\"\r\n\r\nexport default {\r\n  name: \"DetailsView\",\r\n  components: {\r\n    TableComponent,\r\n    RemoveModalComponent,\r\n    DetailModalComponent\r\n  },\r\n  data() {\r\n    return {\r\n      fields: [\r\n        {\r\n          key: \"name\",\r\n          sortable: true,\r\n          label: \"Название\",\r\n          filtrable: true,\r\n        },\r\n        {\r\n          key: \"partNumber\",\r\n          sortable: true,\r\n          filtrable: true,\r\n          label: \"Артикул\"\r\n        },\r\n        {\r\n          key: \"note\",\r\n          sortable: true,\r\n          filtrable: true,\r\n          label: \"Примечание\",\r\n        },\r\n        {\r\n          key: \"actions\",\r\n          label: \"Действия\",\r\n          stickyColumn: true\r\n        }\r\n      ],\r\n    }\r\n  },\r\n  props: {\r\n    user: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    crud: {\r\n      type: CRUDService,\r\n      required: true\r\n    },\r\n    messageService: {\r\n      type: MessageService,\r\n      required: true\r\n    }\r\n  },\r\n  methods: {\r\n    detailPresenter(detail){\r\n      return detail.name + \" \" + detail.partNumber;\r\n    },\r\n\r\n    addTableItemHandler() {\r\n      this.$refs[\"CreateItemModal\"].show();\r\n    },\r\n    removeTableItemHandler(item) {\r\n      this.$refs[\"RemoveItemModal\"].show(item);\r\n    },\r\n    editTableItemHandler(item) {\r\n      this.$refs[\"EditItemModal\"].show(item);\r\n    },\r\n\r\n    removeItem(item, modalEvent) {\r\n      modalEvent.preventDefault();\r\n\r\n      this.crud.removeDetail(item.entityId)\r\n        .then(() => {\r\n          this.$refs[\"RemoveItemModal\"].close();\r\n          this.messageService.showDelete(this.detailPresenter(item));\r\n          this.$refs[\"table\"].update();\r\n        })\r\n        .catch(err => {\r\n          this.messageService.showError(err.message);\r\n        });\r\n    },\r\n\r\n    addItem(item, modalEvent) {\r\n      modalEvent.preventDefault();\r\n\r\n      this.crud.addDetail(item)\r\n        .then(() => {\r\n          this.$refs[\"CreateItemModal\"].close();\r\n          this.messageService.showCreate(this.detailPresenter(item));\r\n          this.$refs[\"table\"].update();\r\n        })\r\n        .catch(err => {\r\n          this.messageService.showError(err.message);\r\n        });\r\n    },\r\n\r\n    updateItem(item, modalEvent) {\r\n      modalEvent.preventDefault();\r\n\r\n      this.crud.updateDetail(item.entityId, item)\r\n        .then(() => {\r\n          this.$refs[\"EditItemModal\"].close();\r\n          this.messageService.showUpdate(this.detailPresenter(item));\r\n          this.$refs[\"table\"].update();\r\n        })\r\n        .catch(err => {\r\n          this.messageService.showError(err.message);\r\n        });\r\n    },\r\n\r\n    dataProvider(ctx) {\r\n      return this.crud.getDetails(ctx)\r\n      .catch(data => {\r\n        this.messageService.showError(\"Не удалось получить данные\");\r\n        return data;\r\n      });\r\n    },\r\n  }\r\n}\r\n</script>\r\n  \r\n<style scoped></style>\r\n  "],"mappings":"AAqCA,OAAAA,cAAA;AACA,OAAAC,oBAAA;AACA,OAAAC,oBAAA;AACA,OAAAC,WAAA;AACA,OAAAC,cAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAN,cAAA;IACAC,oBAAA;IACAC;EACA;EACAK,KAAA;IACA;MACAC,MAAA,GACA;QACAC,GAAA;QACAC,QAAA;QACAC,KAAA;QACAC,SAAA;MACA,GACA;QACAH,GAAA;QACAC,QAAA;QACAE,SAAA;QACAD,KAAA;MACA,GACA;QACAF,GAAA;QACAC,QAAA;QACAE,SAAA;QACAD,KAAA;MACA,GACA;QACAF,GAAA;QACAE,KAAA;QACAE,YAAA;MACA;IAEA;EACA;EACAC,KAAA;IACAC,IAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,QAAA;IACA;IACAC,IAAA;MACAH,IAAA,EAAAb,WAAA;MACAe,QAAA;IACA;IACAE,cAAA;MACAJ,IAAA,EAAAZ,cAAA;MACAc,QAAA;IACA;EACA;EACAG,OAAA;IACAC,gBAAAC,MAAA;MACA,OAAAA,MAAA,CAAAlB,IAAA,SAAAkB,MAAA,CAAAC,UAAA;IACA;IAEAC,oBAAA;MACA,KAAAC,KAAA,oBAAAC,IAAA;IACA;IACAC,uBAAAC,IAAA;MACA,KAAAH,KAAA,oBAAAC,IAAA,CAAAE,IAAA;IACA;IACAC,qBAAAD,IAAA;MACA,KAAAH,KAAA,kBAAAC,IAAA,CAAAE,IAAA;IACA;IAEAE,WAAAF,IAAA,EAAAG,UAAA;MACAA,UAAA,CAAAC,cAAA;MAEA,KAAAd,IAAA,CAAAe,YAAA,CAAAL,IAAA,CAAAM,QAAA,EACAC,IAAA;QACA,KAAAV,KAAA,oBAAAW,KAAA;QACA,KAAAjB,cAAA,CAAAkB,UAAA,MAAAhB,eAAA,CAAAO,IAAA;QACA,KAAAH,KAAA,UAAAa,MAAA;MACA,GACAC,KAAA,CAAAC,GAAA;QACA,KAAArB,cAAA,CAAAsB,SAAA,CAAAD,GAAA,CAAAE,OAAA;MACA;IACA;IAEAC,QAAAf,IAAA,EAAAG,UAAA;MACAA,UAAA,CAAAC,cAAA;MAEA,KAAAd,IAAA,CAAA0B,SAAA,CAAAhB,IAAA,EACAO,IAAA;QACA,KAAAV,KAAA,oBAAAW,KAAA;QACA,KAAAjB,cAAA,CAAA0B,UAAA,MAAAxB,eAAA,CAAAO,IAAA;QACA,KAAAH,KAAA,UAAAa,MAAA;MACA,GACAC,KAAA,CAAAC,GAAA;QACA,KAAArB,cAAA,CAAAsB,SAAA,CAAAD,GAAA,CAAAE,OAAA;MACA;IACA;IAEAI,WAAAlB,IAAA,EAAAG,UAAA;MACAA,UAAA,CAAAC,cAAA;MAEA,KAAAd,IAAA,CAAA6B,YAAA,CAAAnB,IAAA,CAAAM,QAAA,EAAAN,IAAA,EACAO,IAAA;QACA,KAAAV,KAAA,kBAAAW,KAAA;QACA,KAAAjB,cAAA,CAAA6B,UAAA,MAAA3B,eAAA,CAAAO,IAAA;QACA,KAAAH,KAAA,UAAAa,MAAA;MACA,GACAC,KAAA,CAAAC,GAAA;QACA,KAAArB,cAAA,CAAAsB,SAAA,CAAAD,GAAA,CAAAE,OAAA;MACA;IACA;IAEAO,aAAAC,GAAA;MACA,YAAAhC,IAAA,CAAAiC,UAAA,CAAAD,GAAA,EACAX,KAAA,CAAAjC,IAAA;QACA,KAAAa,cAAA,CAAAsB,SAAA;QACA,OAAAnC,IAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}