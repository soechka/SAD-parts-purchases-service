{"ast":null,"code":"import TableComponent from \"@/components/TableComponent.vue\";\nimport RemoveModalComponent from \"@/components/RemoveModalComponent.vue\";\nimport UserModalComponent from \"@/components/UserModalComponent.vue\";\nimport CRUDService from \"@/services/CRUDService\";\nimport MessageService from \"@/services/MessageService\";\nexport default {\n  name: \"UsersView\",\n  components: {\n    TableComponent,\n    RemoveModalComponent,\n    UserModalComponent\n  },\n  data() {\n    return {\n      fields: [{\n        key: \"login\",\n        label: \"Логин\"\n      }, {\n        key: \"isAdmin\",\n        label: \"Роли\",\n        formatter: value => value ? \"Администратор\" : \"Пользователь\"\n      }, {\n        key: \"actions\",\n        label: \"Действия\",\n        stickyColumn: true,\n        editable: false\n      }]\n    };\n  },\n  props: {\n    user: {\n      type: Object,\n      required: true\n    },\n    crud: {\n      type: CRUDService,\n      required: true\n    },\n    messageService: {\n      type: MessageService,\n      required: true\n    }\n  },\n  methods: {\n    userPresenter(user) {\n      return user.login;\n    },\n    addTableItemHandler() {\n      this.$refs[\"CreateItemModal\"].show();\n    },\n    removeTableItemHandler(item) {\n      this.$refs[\"RemoveItemModal\"].show(item);\n    },\n    editTableItemHandler(item) {\n      this.$refs[\"EditItemModal\"].show(item);\n    },\n    removeItem(item, modalEvent) {\n      modalEvent.preventDefault();\n      this.crud.removeUser(item.id).then(() => {\n        this.$refs[\"RemoveItemModal\"].close();\n        this.messageService.showDelete(this.userPresenter(item));\n        this.$refs[\"table\"].update();\n      }).catch(err => {\n        this.messageService.showError(err.message);\n      });\n    },\n    addItem(item, modalEvent) {\n      modalEvent.preventDefault();\n      this.crud.addUser(item).then(() => {\n        this.$refs[\"CreateItemModal\"].close();\n        this.messageService.showCreate(this.userPresenter(item));\n        this.$refs[\"table\"].update();\n      }).catch(err => {\n        if (err.response.message == \"Error: Username is already taken!\") {\n          this.messageService.showError(\"Пользователь с таким именем уже существует\");\n        }\n        if (err.response.data == \"Password is too easy\") {\n          this.messageService.showError(\"Пароль слишком легкий, добавьте цифр и спецсимволов\");\n        }\n        if (err.response.message == \"Error: Email is already in use!\") {\n          this.messageService.showError(\"Пользователь с такой почтой уже существует\");\n        }\n      });\n    },\n    updateItem(item, modalEvent) {\n      modalEvent.preventDefault();\n      this.crud.updateUser(item.entityId, item).then(() => {\n        this.$refs[\"EditItemModal\"].close();\n        this.messageService.showUpdate(this.userPresenter(item));\n        this.$refs[\"table\"].update();\n      }).catch(err => {\n        this.messageService.showError(err.message);\n      });\n    },\n    dataProvider(ctx) {\n      return this.crud.getUsers(ctx).catch(data => {\n        this.messageService.showError(\"Не удалось получить данные\");\n        return data;\n      });\n    }\n  }\n};","map":{"version":3,"names":["TableComponent","RemoveModalComponent","UserModalComponent","CRUDService","MessageService","name","components","data","fields","key","label","formatter","value","stickyColumn","editable","props","user","type","Object","required","crud","messageService","methods","userPresenter","login","addTableItemHandler","$refs","show","removeTableItemHandler","item","editTableItemHandler","removeItem","modalEvent","preventDefault","removeUser","id","then","close","showDelete","update","catch","err","showError","message","addItem","addUser","showCreate","response","updateItem","updateUser","entityId","showUpdate","dataProvider","ctx","getUsers"],"sources":["src/views/UsersView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <TableComponent\r\n      ref=\"table\"\r\n      :fields=\"fields\"\r\n      v-on:itemAdd=\"addTableItemHandler\"\r\n      v-on:itemRemove=\"removeTableItemHandler\"\r\n      v-on:itemEdit=\"editTableItemHandler\"\r\n      :dataProvider=\"dataProvider\"\r\n    ></TableComponent>\r\n    <div>\r\n      <RemoveModalComponent\r\n        ref=\"RemoveItemModal\"\r\n        :contentPresenter=\"value => userPresenter(value)\"\r\n        :okHandler=\"removeItem\"\r\n      ></RemoveModalComponent>\r\n\r\n      <UserModalComponent\r\n        ref=\"CreateItemModal\"\r\n        title=\"Создание записи об пользователе\"\r\n        :submitHandler=\"addItem\"\r\n        :crud=\"crud\"\r\n      >\r\n      </UserModalComponent>\r\n\r\n      <UserModalComponent\r\n        ref=\"EditItemModal\"\r\n        title=\"Редактирование записи об пользователе\"\r\n        :submitHandler=\"updateItem\"\r\n        :crud=\"crud\"\r\n      >\r\n      </UserModalComponent>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport TableComponent from \"@/components/TableComponent.vue\"\r\nimport RemoveModalComponent from \"@/components/RemoveModalComponent.vue\"\r\nimport UserModalComponent from \"@/components/UserModalComponent.vue\"\r\nimport CRUDService from \"@/services/CRUDService\"\r\nimport MessageService from \"@/services/MessageService\"\r\n\r\nexport default {\r\n  name: \"UsersView\",\r\n  components: {\r\n    TableComponent,\r\n    RemoveModalComponent,\r\n    UserModalComponent\r\n  },\r\n  data() {\r\n    return {\r\n      fields: [\r\n        {\r\n          key: \"login\",\r\n          label: \"Логин\"\r\n        },\r\n        {\r\n          key: \"isAdmin\",\r\n          label: \"Роли\",\r\n          formatter: value => value ? \"Администратор\" : \"Пользователь\"\r\n        },\r\n        {\r\n          key: \"actions\",\r\n          label: \"Действия\",\r\n          stickyColumn: true,\r\n          editable: false,\r\n        }\r\n      ],\r\n    }\r\n  },\r\n  props: {\r\n    user: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    crud: {\r\n      type: CRUDService,\r\n      required: true\r\n    },\r\n    messageService: {\r\n      type: MessageService,\r\n      required: true\r\n    }\r\n  },\r\n  methods: {\r\n    userPresenter(user) {\r\n      return user.login;\r\n    },\r\n\r\n    addTableItemHandler() {\r\n      this.$refs[\"CreateItemModal\"].show();\r\n    },\r\n    removeTableItemHandler(item) {\r\n      this.$refs[\"RemoveItemModal\"].show(item);\r\n    },\r\n    editTableItemHandler(item) {\r\n      this.$refs[\"EditItemModal\"].show(item);\r\n    },\r\n\r\n    removeItem(item, modalEvent) {\r\n      modalEvent.preventDefault();\r\n\r\n      this.crud.removeUser(item.id)\r\n        .then(() => {\r\n          this.$refs[\"RemoveItemModal\"].close();\r\n          this.messageService.showDelete(this.userPresenter(item));\r\n          this.$refs[\"table\"].update();\r\n        })\r\n        .catch(err => {\r\n          this.messageService.showError(err.message);\r\n        });\r\n    },\r\n\r\n    addItem(item, modalEvent) {\r\n      modalEvent.preventDefault();\r\n\r\n      this.crud.addUser(item)\r\n        .then(() => {\r\n          this.$refs[\"CreateItemModal\"].close();\r\n          this.messageService.showCreate(this.userPresenter(item));\r\n          this.$refs[\"table\"].update();\r\n        })\r\n        .catch(err => {\r\n          if (err.response.message == \"Error: Username is already taken!\") {\r\n            this.messageService.showError(\"Пользователь с таким именем уже существует\");\r\n          }\r\n          if (err.response.data == \"Password is too easy\") {\r\n            this.messageService.showError(\"Пароль слишком легкий, добавьте цифр и спецсимволов\");\r\n          }\r\n          if (err.response.message == \"Error: Email is already in use!\") {\r\n            this.messageService.showError(\"Пользователь с такой почтой уже существует\");\r\n          }\r\n        });\r\n    },\r\n\r\n    updateItem(item, modalEvent) {\r\n      modalEvent.preventDefault();\r\n\r\n      this.crud.updateUser(item.entityId, item)\r\n        .then(() => {\r\n          this.$refs[\"EditItemModal\"].close();\r\n          this.messageService.showUpdate(this.userPresenter(item));\r\n          this.$refs[\"table\"].update();\r\n        })\r\n        .catch(err => {\r\n          this.messageService.showError(err.message);\r\n        });\r\n    },\r\n\r\n    dataProvider(ctx) {\r\n      return this.crud.getUsers(ctx).catch(data => {\r\n        this.messageService.showError(\"Не удалось получить данные\");\r\n        return data;\r\n      });\r\n    },\r\n  }\r\n}\r\n</script>\r\n  \r\n<style scoped></style>\r\n  "],"mappings":"AAqCA,OAAAA,cAAA;AACA,OAAAC,oBAAA;AACA,OAAAC,kBAAA;AACA,OAAAC,WAAA;AACA,OAAAC,cAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAN,cAAA;IACAC,oBAAA;IACAC;EACA;EACAK,KAAA;IACA;MACAC,MAAA,GACA;QACAC,GAAA;QACAC,KAAA;MACA,GACA;QACAD,GAAA;QACAC,KAAA;QACAC,SAAA,EAAAC,KAAA,IAAAA,KAAA;MACA,GACA;QACAH,GAAA;QACAC,KAAA;QACAG,YAAA;QACAC,QAAA;MACA;IAEA;EACA;EACAC,KAAA;IACAC,IAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,QAAA;IACA;IACAC,IAAA;MACAH,IAAA,EAAAd,WAAA;MACAgB,QAAA;IACA;IACAE,cAAA;MACAJ,IAAA,EAAAb,cAAA;MACAe,QAAA;IACA;EACA;EACAG,OAAA;IACAC,cAAAP,IAAA;MACA,OAAAA,IAAA,CAAAQ,KAAA;IACA;IAEAC,oBAAA;MACA,KAAAC,KAAA,oBAAAC,IAAA;IACA;IACAC,uBAAAC,IAAA;MACA,KAAAH,KAAA,oBAAAC,IAAA,CAAAE,IAAA;IACA;IACAC,qBAAAD,IAAA;MACA,KAAAH,KAAA,kBAAAC,IAAA,CAAAE,IAAA;IACA;IAEAE,WAAAF,IAAA,EAAAG,UAAA;MACAA,UAAA,CAAAC,cAAA;MAEA,KAAAb,IAAA,CAAAc,UAAA,CAAAL,IAAA,CAAAM,EAAA,EACAC,IAAA;QACA,KAAAV,KAAA,oBAAAW,KAAA;QACA,KAAAhB,cAAA,CAAAiB,UAAA,MAAAf,aAAA,CAAAM,IAAA;QACA,KAAAH,KAAA,UAAAa,MAAA;MACA,GACAC,KAAA,CAAAC,GAAA;QACA,KAAApB,cAAA,CAAAqB,SAAA,CAAAD,GAAA,CAAAE,OAAA;MACA;IACA;IAEAC,QAAAf,IAAA,EAAAG,UAAA;MACAA,UAAA,CAAAC,cAAA;MAEA,KAAAb,IAAA,CAAAyB,OAAA,CAAAhB,IAAA,EACAO,IAAA;QACA,KAAAV,KAAA,oBAAAW,KAAA;QACA,KAAAhB,cAAA,CAAAyB,UAAA,MAAAvB,aAAA,CAAAM,IAAA;QACA,KAAAH,KAAA,UAAAa,MAAA;MACA,GACAC,KAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAM,QAAA,CAAAJ,OAAA;UACA,KAAAtB,cAAA,CAAAqB,SAAA;QACA;QACA,IAAAD,GAAA,CAAAM,QAAA,CAAAxC,IAAA;UACA,KAAAc,cAAA,CAAAqB,SAAA;QACA;QACA,IAAAD,GAAA,CAAAM,QAAA,CAAAJ,OAAA;UACA,KAAAtB,cAAA,CAAAqB,SAAA;QACA;MACA;IACA;IAEAM,WAAAnB,IAAA,EAAAG,UAAA;MACAA,UAAA,CAAAC,cAAA;MAEA,KAAAb,IAAA,CAAA6B,UAAA,CAAApB,IAAA,CAAAqB,QAAA,EAAArB,IAAA,EACAO,IAAA;QACA,KAAAV,KAAA,kBAAAW,KAAA;QACA,KAAAhB,cAAA,CAAA8B,UAAA,MAAA5B,aAAA,CAAAM,IAAA;QACA,KAAAH,KAAA,UAAAa,MAAA;MACA,GACAC,KAAA,CAAAC,GAAA;QACA,KAAApB,cAAA,CAAAqB,SAAA,CAAAD,GAAA,CAAAE,OAAA;MACA;IACA;IAEAS,aAAAC,GAAA;MACA,YAAAjC,IAAA,CAAAkC,QAAA,CAAAD,GAAA,EAAAb,KAAA,CAAAjC,IAAA;QACA,KAAAc,cAAA,CAAAqB,SAAA;QACA,OAAAnC,IAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}