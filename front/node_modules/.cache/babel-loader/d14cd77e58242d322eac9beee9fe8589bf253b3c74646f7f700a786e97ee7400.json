{"ast":null,"code":"import TableComponent from \"@/components/TableComponent.vue\";\nimport RemoveModalComponent from \"@/components/RemoveModalComponent.vue\";\nimport SuppliedDetailModalComponent from \"@/components/SuppliedDetailModalComponent.vue\";\nimport CRUDService from \"@/services/CRUDService\";\nimport MessageService from '@/services/MessageService';\nexport default {\n  name: \"SuppliedDetailsView\",\n  components: {\n    TableComponent,\n    RemoveModalComponent,\n    SuppliedDetailModalComponent\n  },\n  data() {\n    return {\n      fields: [{\n        key: \"date\",\n        sortable: true,\n        filtrable: false,\n        label: \"Дата изменения\",\n        formatter: value => value.split('T')[0]\n      }, {\n        key: \"cost\",\n        sortable: true,\n        filtrable: false,\n        label: \"Цена\"\n      }, {\n        key: \"detailData\",\n        // sortable: true,\n        // filtrable: true,\n        label: \"Название детали\",\n        formatter: value => value.name\n      }, {\n        key: \"detailData\",\n        // sortable: true,\n        // filtrable: false,\n        label: \"Артикул\",\n        formatter: value => value.partNumber\n      }, {\n        key: \"supplierData\",\n        // sortable: true,\n        // filtrable: false,\n        label: \"Поставщик\",\n        formatter: value => value.name\n      }, {\n        key: \"actions\",\n        label: \"Действия\",\n        stickyColumn: true\n      }],\n      address: this.connection + \"/students\"\n    };\n  },\n  props: {\n    user: {\n      type: Object,\n      required: true\n    },\n    crud: {\n      type: CRUDService,\n      required: true\n    },\n    messageService: {\n      type: MessageService,\n      required: true\n    }\n  },\n  methods: {\n    suppliedDetailPresenter(data) {\n      return data.supplierData.name + \" \" + data.detailData.name;\n    },\n    addTableItemHandler() {\n      this.$refs[\"CreateItemModal\"].show();\n    },\n    removeTableItemHandler(item) {\n      this.$refs[\"RemoveItemModal\"].show(item);\n    },\n    editTableItemHandler(item) {\n      this.$refs[\"EditItemModal\"].show(item);\n    },\n    removeItem(item, modalEvent) {\n      modalEvent.preventDefault();\n      this.crud.removeSuppliedDetail(item.entityId).then(() => {\n        this.$refs[\"RemoveItemModal\"].close();\n        this.messageService.showDelete(this.suppliedDetailPresenter(item));\n        this.$refs[\"table\"].update();\n      }).catch(err => {\n        this.messageService.showError(err.message);\n      });\n    },\n    addItem(item, modalEvent) {\n      modalEvent.preventDefault();\n      this.crud.addSuppliedDetail(item).then(() => {\n        this.$refs[\"CreateItemModal\"].close();\n        this.messageService.showCreate(this.suppliedDetailPresenter(item));\n        this.$refs[\"table\"].update();\n      }).catch(err => {\n        this.messageService.showError(err.message);\n      });\n    },\n    updateItem(item, modalEvent) {\n      modalEvent.preventDefault();\n      this.crud.updateSuppliedDetail(item.entityId, item).then(() => {\n        this.$refs[\"EditItemModal\"].close();\n        this.messageService.showUpdate(this.suppliedDetailPresenter(item));\n        this.$refs[\"table\"].update();\n      }).catch(err => {\n        this.messageService.showError(err.message);\n      });\n    },\n    loadAllData(suppliedDetail) {\n      this.crud.getSupplier(suppliedDetail.supplier).then(item => {\n        suppliedDetail.supplierData = item;\n      });\n      this.crud.getDetail(suppliedDetail.part).then(item => {\n        suppliedDetail.detailData = item;\n      });\n      return suppliedDetail;\n    },\n    // async dataProvider(ctx) {\n    //   var results = await this.crud.getSuppliedDetails(ctx);\n    //   // for (let i = 0; i < results.length; i++) {\n    //   //   // let element = results[i];\n    //   //   // element.detailData = await this.crud.getDetail(element.part); \n    //   //   // element.supplierData =  await this.crud.getSupplier(element.supplier);       \n    //   // }\n    //   return results;\n    // },\n\n    dataProvider(ctx) {\n      return this.crud.getSuppliedDetails(ctx).catch(data => {\n        this.messageService.showError(\"Не удалось получить данные\");\n        return data;\n      });\n    }\n  }\n};","map":{"version":3,"names":["TableComponent","RemoveModalComponent","SuppliedDetailModalComponent","CRUDService","MessageService","name","components","data","fields","key","sortable","filtrable","label","formatter","value","split","partNumber","stickyColumn","address","connection","props","user","type","Object","required","crud","messageService","methods","suppliedDetailPresenter","supplierData","detailData","addTableItemHandler","$refs","show","removeTableItemHandler","item","editTableItemHandler","removeItem","modalEvent","preventDefault","removeSuppliedDetail","entityId","then","close","showDelete","update","catch","err","showError","message","addItem","addSuppliedDetail","showCreate","updateItem","updateSuppliedDetail","showUpdate","loadAllData","suppliedDetail","getSupplier","supplier","getDetail","part","dataProvider","ctx","getSuppliedDetails"],"sources":["src/views/SuppliedDetailsView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <TableComponent\r\n      ref=\"table\"\r\n      :fields=\"fields\"\r\n      v-on:itemAdd=\"addTableItemHandler\"\r\n      v-on:itemRemove=\"removeTableItemHandler\"\r\n      v-on:itemEdit=\"editTableItemHandler\"\r\n      :dataProvider=\"dataProvider\"\r\n    ></TableComponent>\r\n    <div>\r\n      <RemoveModalComponent\r\n        ref=\"RemoveItemModal\"\r\n        :contentPresenter=\"value => suppliedDetailPresenter(value)\"\r\n        :okHandler=\"removeItem\"\r\n      ></RemoveModalComponent>\r\n\r\n      <SuppliedDetailModalComponent\r\n        ref=\"CreateItemModal\"\r\n        title=\"Создание записи o цене детали\"\r\n        :submitHandler=\"addItem\"\r\n        :crud=\"crud\"\r\n      >\r\n      </SuppliedDetailModalComponent>\r\n\r\n      <SuppliedDetailModalComponent\r\n        ref=\"EditItemModal\"\r\n        title=\"Редактирование записи o цене детали\"\r\n        :submitHandler=\"updateItem\"\r\n        :crud=\"crud\"\r\n      >\r\n      </SuppliedDetailModalComponent>\r\n    </div>\r\n  </div>\r\n</template>\r\n  \r\n<script>\r\nimport TableComponent from \"@/components/TableComponent.vue\"\r\nimport RemoveModalComponent from \"@/components/RemoveModalComponent.vue\"\r\nimport SuppliedDetailModalComponent from \"@/components/SuppliedDetailModalComponent.vue\"\r\nimport CRUDService from \"@/services/CRUDService\"\r\nimport MessageService from '@/services/MessageService'\r\n\r\nexport default {\r\n  name: \"SuppliedDetailsView\",\r\n  components: {\r\n    TableComponent,\r\n    RemoveModalComponent,\r\n    SuppliedDetailModalComponent\r\n  },\r\n  data() {\r\n    return {\r\n      fields: [\r\n        {\r\n          key: \"date\",\r\n          sortable: true,\r\n          filtrable: false,\r\n          label: \"Дата изменения\",\r\n          formatter: value => value.split('T')[0]\r\n        },\r\n        {\r\n          key: \"cost\",\r\n          sortable: true,\r\n          filtrable: false,\r\n          label: \"Цена\",\r\n        },\r\n        {\r\n          key: \"detailData\",\r\n          // sortable: true,\r\n          // filtrable: true,\r\n          label: \"Название детали\",\r\n          formatter: value => value.name\r\n        },\r\n        {\r\n          key: \"detailData\",\r\n          // sortable: true,\r\n          // filtrable: false,\r\n          label: \"Артикул\",\r\n          formatter: value => value.partNumber\r\n        },\r\n        {\r\n          key: \"supplierData\",\r\n          // sortable: true,\r\n          // filtrable: false,\r\n          label: \"Поставщик\",\r\n          formatter: value => value.name\r\n        },\r\n        {\r\n          key: \"actions\",\r\n          label: \"Действия\",\r\n          stickyColumn: true\r\n        }\r\n      ],\r\n      address: this.connection + \"/students\"\r\n    }\r\n  },\r\n  props: {\r\n    user: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    crud: {\r\n      type: CRUDService,\r\n      required: true\r\n    },\r\n    messageService: {\r\n      type: MessageService,\r\n      required: true\r\n    }\r\n  },\r\n  methods: {\r\n    suppliedDetailPresenter(data) {\r\n      return data.supplierData.name + \" \" + data.detailData.name;\r\n    },\r\n\r\n    addTableItemHandler() {\r\n      this.$refs[\"CreateItemModal\"].show();\r\n    },\r\n    removeTableItemHandler(item) {\r\n      this.$refs[\"RemoveItemModal\"].show(item);\r\n    },\r\n    editTableItemHandler(item) {\r\n      this.$refs[\"EditItemModal\"].show(item);\r\n    },\r\n\r\n    removeItem(item, modalEvent) {\r\n      modalEvent.preventDefault();\r\n\r\n      this.crud.removeSuppliedDetail(item.entityId)\r\n        .then(() => {\r\n          this.$refs[\"RemoveItemModal\"].close();\r\n          this.messageService.showDelete(this.suppliedDetailPresenter(item));\r\n          this.$refs[\"table\"].update();\r\n        })\r\n        .catch(err => {\r\n          this.messageService.showError(err.message);\r\n        });\r\n    },\r\n\r\n    addItem(item, modalEvent) {\r\n      modalEvent.preventDefault();\r\n\r\n      this.crud.addSuppliedDetail(item)\r\n        .then(() => {\r\n          this.$refs[\"CreateItemModal\"].close();\r\n          this.messageService.showCreate(this.suppliedDetailPresenter(item));\r\n          this.$refs[\"table\"].update();\r\n        })\r\n        .catch(err => {\r\n          this.messageService.showError(err.message);\r\n        });\r\n    },\r\n\r\n    updateItem(item, modalEvent) {\r\n      modalEvent.preventDefault();\r\n\r\n      this.crud.updateSuppliedDetail(item.entityId, item)\r\n        .then(() => {\r\n          this.$refs[\"EditItemModal\"].close();\r\n          this.messageService.showUpdate(this.suppliedDetailPresenter(item));\r\n          this.$refs[\"table\"].update();\r\n        })\r\n        .catch(err => {\r\n          this.messageService.showError(err.message);\r\n        });\r\n    },\r\n\r\n    loadAllData(suppliedDetail){\r\n      this.crud.getSupplier(suppliedDetail.supplier).then(item =>{\r\n        suppliedDetail.supplierData = item;\r\n      });\r\n\r\n      this.crud.getDetail(suppliedDetail.part).then(item =>{\r\n        suppliedDetail.detailData = item;\r\n      });\r\n      return suppliedDetail;\r\n    },\r\n\r\n    // async dataProvider(ctx) {\r\n    //   var results = await this.crud.getSuppliedDetails(ctx);\r\n    //   // for (let i = 0; i < results.length; i++) {\r\n    //   //   // let element = results[i];\r\n    //   //   // element.detailData = await this.crud.getDetail(element.part); \r\n    //   //   // element.supplierData =  await this.crud.getSupplier(element.supplier);       \r\n    //   // }\r\n    //   return results;\r\n    // },\r\n\r\n    dataProvider(ctx) {\r\n      return this.crud.getSuppliedDetails(ctx)\r\n      .catch(data => {\r\n        this.messageService.showError(\"Не удалось получить данные\");\r\n        return data;\r\n      });\r\n    },\r\n  }\r\n}\r\n</script>\r\n  \r\n<style scoped></style>\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}