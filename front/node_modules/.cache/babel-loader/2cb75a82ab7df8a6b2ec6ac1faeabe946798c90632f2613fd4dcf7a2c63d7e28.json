{"ast":null,"code":"import CustomModalComponent from \"./CustomModalComponent.vue\";\nimport CRUDService from \"@/services/CRUDService\";\nexport default {\n  name: \"DetailModalComponent\",\n  components: {\n    CustomModalComponent\n  },\n  data() {\n    return {\n      data: {\n        id: \"\",\n        entityId: \"\",\n        name: null,\n        note: null,\n        partNumber: null\n      }\n    };\n  },\n  props: {\n    title: {\n      type: String,\n      default: \"Редактирование записи\"\n    },\n    submitHandler: {\n      type: Function,\n      default: function () {}\n    },\n    crud: {\n      type: CRUDService,\n      required: true\n    }\n  },\n  methods: {\n    show(data) {\n      if (data !== undefined) {\n        this.data.id = data.id;\n        this.data.entityId = data.entityId;\n        this.data.name = data.name;\n        this.data.partNumber = data.partNumber;\n        this.data.note = data.note;\n      } else {\n        this.data.id = \"\";\n        this.data.entityId = \"\";\n        this.data.name = \"\";\n        this.data.partNumber = \"\";\n        this.data.note = \"\";\n      }\n      this.$refs[\"custom-modal\"].show(this.data);\n    },\n    close() {\n      this.$refs[\"custom-modal\"].close();\n    },\n    isEmpty(str) {\n      return str == null || str == undefined || str.trim() != \"\";\n    },\n    submit: function (data, modalEvent) {\n      modalEvent.preventDefault();\n      if (this.isValid) {\n        // this.data.teacher = this.teachers.find(item => item.id == this.teacherId);\n        // this.data.studyYear = this.years.find(item => item.id == this.studyYearId);\n        // this.data.parallel = this.parallels.find(item => item.id == this.parallelId);\n        this.submitHandler(this.data, modalEvent);\n      }\n    }\n  },\n  computed: {\n    nameState() {\n      return this.isEmpty(this.data.name) ? null : false;\n    },\n    noteState() {\n      return null;\n    },\n    codeState() {\n      return this.isEmpty(this.data.partNumber) ? null : false;\n    },\n    isValid() {\n      return this.nameState == null && this.noteState == null && this.codeState == null;\n    }\n  }\n};","map":{"version":3,"names":["CustomModalComponent","CRUDService","name","components","data","id","entityId","note","partNumber","props","title","type","String","default","submitHandler","Function","crud","required","methods","show","undefined","$refs","close","isEmpty","str","trim","submit","modalEvent","preventDefault","isValid","computed","nameState","noteState","codeState"],"sources":["src/components/DetailModalComponent.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <CustomModalComponent\r\n      ref=\"custom-modal\"\r\n      :okHandler=\"submit\"\r\n      :title=\"title\"\r\n    >\r\n      <template v-slot:body>\r\n        <form ref=\"form\">\r\n          <b-form-group\r\n            label=\"Название\"\r\n            label-for=\"name-input\"\r\n            invalid-feedback=\"Название не может быть пустым\"\r\n            :state=\"nameState\"\r\n          >\r\n            <b-form-input\r\n              id=\"name-input\"\r\n              debounce=\"500\"\r\n              v-model=\"data.name\"\r\n              :state=\"nameState\"\r\n              required\r\n            ></b-form-input>\r\n          </b-form-group>\r\n\r\n          <b-form-group\r\n            label=\"Артикул\"\r\n            label-for=\"code-input\"\r\n            invalid-feedback=\"Не может быть пустым\"\r\n            :state=\"codeState\"\r\n          >\r\n            <b-form-input\r\n              id=\"code-input\"\r\n              debounce=\"500\"\r\n              v-model=\"data.partNumber\"\r\n              :state=\"codeState\"\r\n              required\r\n            ></b-form-input>\r\n          </b-form-group>\r\n\r\n          <b-form-group\r\n            label=\"Примечание\"\r\n            label-for=\"note-input\"\r\n            invalid-feedback=\"Ошибка в примечании\"\r\n            :state=\"noteState\"\r\n          >\r\n            <b-form-input\r\n              id=\"note-input\"\r\n              debounce=\"500\"\r\n              v-model=\"data.note\"\r\n              :state=\"noteState\"\r\n              required\r\n            ></b-form-input>\r\n          </b-form-group>\r\n        </form>\r\n      </template>\r\n    </CustomModalComponent>\r\n  </div>\r\n</template>\r\n<script>\r\nimport CustomModalComponent from \"./CustomModalComponent.vue\";\r\nimport CRUDService from \"@/services/CRUDService\";\r\n\r\nexport default {\r\n  name: \"DetailModalComponent\",\r\n  components: {\r\n    CustomModalComponent\r\n  },\r\n  data() {\r\n    return {\r\n      data: {\r\n        id: \"\",\r\n        entityId: \"\",\r\n        name: null,\r\n        note: null,\r\n        partNumber: null\r\n      }\r\n    }\r\n  },\r\n  props: {\r\n    title: {\r\n      type: String,\r\n      default: \"Редактирование записи\"\r\n    },\r\n    submitHandler: {\r\n      type: Function,\r\n      default: function () { }\r\n    },\r\n    crud: {\r\n      type: CRUDService,\r\n      required: true\r\n    },\r\n  },\r\n  methods: {\r\n    show(data) {\r\n      if (data !== undefined) {\r\n        this.data.id = data.id;\r\n        this.data.entityId = data.entityId;\r\n        this.data.name = data.name;\r\n        this.data.partNumber = data.partNumber;\r\n        this.data.note = data.note;\r\n      }\r\n      else {\r\n        this.data.id = \"\";\r\n        this.data.entityId = \"\";\r\n        this.data.name = \"\";\r\n        this.data.partNumber = \"\";\r\n        this.data.note = \"\";\r\n      }\r\n      this.$refs[\"custom-modal\"].show(this.data);\r\n    },\r\n\r\n    close() {\r\n      this.$refs[\"custom-modal\"].close();\r\n    },\r\n\r\n\r\n   \r\n    isEmpty(str) {\r\n      return str == null || str == undefined || str.trim() != \"\";\r\n    },\r\n\r\n    submit: function (data, modalEvent) {\r\n      modalEvent.preventDefault();\r\n      if (this.isValid) {\r\n        // this.data.teacher = this.teachers.find(item => item.id == this.teacherId);\r\n        // this.data.studyYear = this.years.find(item => item.id == this.studyYearId);\r\n        // this.data.parallel = this.parallels.find(item => item.id == this.parallelId);\r\n        this.submitHandler(this.data, modalEvent);\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    nameState() {\r\n      return this.isEmpty(this.data.name) ? null : false;\r\n    },\r\n    noteState() {\r\n      return null;\r\n    },\r\n    codeState() {\r\n      return this.isEmpty(this.data.partNumber) ? null : false;\r\n    },\r\n    isValid() {\r\n      return this.nameState == null && this.noteState == null && this.codeState == null;\r\n    },\r\n  }\r\n}\r\n</script>\r\n<style></style>"],"mappings":"AA2DA,OAAAA,oBAAA;AACA,OAAAC,WAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAH;EACA;EACAI,KAAA;IACA;MACAA,IAAA;QACAC,EAAA;QACAC,QAAA;QACAJ,IAAA;QACAK,IAAA;QACAC,UAAA;MACA;IACA;EACA;EACAC,KAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAC,aAAA;MACAH,IAAA,EAAAI,QAAA;MACAF,OAAA,WAAAA,CAAA;IACA;IACAG,IAAA;MACAL,IAAA,EAAAV,WAAA;MACAgB,QAAA;IACA;EACA;EACAC,OAAA;IACAC,KAAAf,IAAA;MACA,IAAAA,IAAA,KAAAgB,SAAA;QACA,KAAAhB,IAAA,CAAAC,EAAA,GAAAD,IAAA,CAAAC,EAAA;QACA,KAAAD,IAAA,CAAAE,QAAA,GAAAF,IAAA,CAAAE,QAAA;QACA,KAAAF,IAAA,CAAAF,IAAA,GAAAE,IAAA,CAAAF,IAAA;QACA,KAAAE,IAAA,CAAAI,UAAA,GAAAJ,IAAA,CAAAI,UAAA;QACA,KAAAJ,IAAA,CAAAG,IAAA,GAAAH,IAAA,CAAAG,IAAA;MACA,OACA;QACA,KAAAH,IAAA,CAAAC,EAAA;QACA,KAAAD,IAAA,CAAAE,QAAA;QACA,KAAAF,IAAA,CAAAF,IAAA;QACA,KAAAE,IAAA,CAAAI,UAAA;QACA,KAAAJ,IAAA,CAAAG,IAAA;MACA;MACA,KAAAc,KAAA,iBAAAF,IAAA,MAAAf,IAAA;IACA;IAEAkB,MAAA;MACA,KAAAD,KAAA,iBAAAC,KAAA;IACA;IAIAC,QAAAC,GAAA;MACA,OAAAA,GAAA,YAAAA,GAAA,IAAAJ,SAAA,IAAAI,GAAA,CAAAC,IAAA;IACA;IAEAC,MAAA,WAAAA,CAAAtB,IAAA,EAAAuB,UAAA;MACAA,UAAA,CAAAC,cAAA;MACA,SAAAC,OAAA;QACA;QACA;QACA;QACA,KAAAf,aAAA,MAAAV,IAAA,EAAAuB,UAAA;MACA;IACA;EACA;EACAG,QAAA;IACAC,UAAA;MACA,YAAAR,OAAA,MAAAnB,IAAA,CAAAF,IAAA;IACA;IACA8B,UAAA;MACA;IACA;IACAC,UAAA;MACA,YAAAV,OAAA,MAAAnB,IAAA,CAAAI,UAAA;IACA;IACAqB,QAAA;MACA,YAAAE,SAAA,iBAAAC,SAAA,iBAAAC,SAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}