{"ast":null,"code":"import CustomModalComponent from './CustomModalComponent.vue';\nimport CRUDService from \"@/services/CRUDService\";\nexport default {\n  name: \"SupplyModalComponent\",\n  components: {\n    CustomModalComponent\n  },\n  data() {\n    return {\n      suppliedDetailId: null,\n      supplierId: null,\n      suppliers: [],\n      loadedSuppliedDetails: [],\n      data: {\n        id: null,\n        date: new Date().format(\"yyyy-mm-dd\"),\n        amount: 0\n      }\n    };\n  },\n  props: {\n    title: {\n      type: String,\n      default: 'Редактирование записи'\n    },\n    submitHandler: {\n      type: Function,\n      default: function () {}\n    },\n    crud: {\n      type: CRUDService,\n      required: true\n    }\n  },\n  methods: {\n    async show(data) {\n      this.$refs[\"custom-modal\"].show(this.data);\n      await this.updateData();\n      if (data !== undefined) {\n        this.data.id = data.id;\n        this.data.entityId = data.entityId;\n        this.data.name = data.name;\n        this.data.date = data.date;\n        this.data.amount = data.amount;\n        this.supplierId = data.suppliedDetailData.supplier;\n        this.suppliedDetailId = data.suppliedParts;\n      } else {\n        this.data.id = \"\";\n        this.data.date = new Date().format(\"yyyy-mm-dd\");\n        this.data.amount = 0;\n      }\n    },\n    close() {\n      this.$refs[\"custom-modal\"].close();\n    },\n    async updateData() {\n      await this.crud.getSuppliedDetails({\n        sort: {\n          by: \"cost\",\n          desc: false\n        },\n        perPage: 100\n      }).then(items => {\n        this.loadedSuppliedDetails = items;\n        this.loadedSuppliedDetails.forEach(item => item.text = item.detailData.name + \" \" + String(item.cost));\n        if (this.suppliedDetailId == null && this.loadedSuppliedDetails.length > 0) {\n          this.suppliedDetailId = this.loadedSuppliedDetails[0].entityId;\n        }\n      });\n      await this.crud.getSuppliers({\n        sort: {\n          by: \"name\",\n          desc: false\n        },\n        perPage: 100\n      }).then(items => {\n        this.suppliers = items;\n        this.suppliers.forEach(item => item.text = item.name);\n        if (this.supplierId == null && this.suppliers.length > 0) {\n          this.supplierId = this.suppliers[0].entityId;\n        }\n      });\n    },\n    updateSuppliedData(supplierId) {\n      this.suppliedDetails = this.loadedSuppliedDetails.filter(element => element.entityId == supplierId);\n    },\n    submit: function (data, modalEvent) {\n      if (this.isValid) {\n        this.data.suppliedParts = this.suppliedDetailId;\n        this.data.suppliedDetailData = this.suppliedDetail;\n        this.data.amount = Number(this.data.amount);\n        this.submitHandler(this.data, modalEvent);\n      }\n    }\n  },\n  computed: {\n    suppliedDetails: function () {\n      return this.loadedSuppliedDetails.filter(element => element.supplier == this.supplierId);\n    },\n    suppliedDetail: function () {\n      return this.suppliedDetails.find(element => element.entityId == this.suppliedDetailId);\n    },\n    costPerDetail: function () {\n      return this.suppliedDetail == null ? 0 : this.suppliedDetail.cost;\n    },\n    costAll: function () {\n      return this.suppliedDetail == null ? 0 : this.suppliedDetail.cost * this.data.amount;\n    },\n    amountState: function () {\n      return this.data.amount > 0 && !isNaN(this.data.amount) ? null : false;\n    },\n    suppliedDetailState: function () {\n      return this.suppliedDetail == null ? false : null;\n    },\n    isValid: function () {\n      return this.amountState == null && this.suppliedDetailId != null;\n    }\n  }\n};","map":{"version":3,"names":["CustomModalComponent","CRUDService","name","components","data","suppliedDetailId","supplierId","suppliers","loadedSuppliedDetails","id","date","Date","format","amount","props","title","type","String","default","submitHandler","Function","crud","required","methods","show","$refs","updateData","undefined","entityId","suppliedDetailData","supplier","suppliedParts","close","getSuppliedDetails","sort","by","desc","perPage","then","items","forEach","item","text","detailData","cost","length","getSuppliers","updateSuppliedData","suppliedDetails","filter","element","submit","modalEvent","isValid","suppliedDetail","Number","computed","find","costPerDetail","costAll","amountState","isNaN","suppliedDetailState"],"sources":["src/components/SupplyModalComponent.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <CustomModalComponent ref=\"custom-modal\" :okHandler=\"submit\" :title=\"title\">\r\n      <template v-slot:body>\r\n        <form ref=\"form\">\r\n          <b-form-group label=\"Дата\" label-for=\"date-input\" invalid-feedback=\"Неверный формат даты\">\r\n            <b-form-input id=\"date-input\" v-model=\"data.date\" debounce=\"500\" type=\"date\" required></b-form-input>\r\n          </b-form-group>\r\n\r\n          <b-form-group label=\"Поставщик\" label-for=\"supplier-input\">\r\n            <b-form-select id=\"supplier-input\" v-model=\"supplierId\" :options=\"suppliers\" text-field=\"text\"\r\n              value-field=\"entityId\" required></b-form-select>\r\n          </b-form-group>\r\n\r\n          <b-form-group label=\"Поставляемая деталь\" label-for=\"suppliedDetail-input\" invalid-feedback=\"Нужно выбрать деталь\">\r\n            <b-form-select id=\"suppliedDetail-input\" v-model=\"suppliedDetailId\" :options=\"suppliedDetails\"\r\n              text-field=\"text\" value-field=\"entityId\" :state=\"suppliedDetailState\" required></b-form-select>\r\n          </b-form-group>\r\n\r\n          <b-form-group label=\"Цена за деталь\" label-for=\"costPerDetail-input\" invalid-feedback=\"Неверный формат даты\">\r\n            <b-form-input id=\"costPerDetail-input\" v-model=\"costPerDetail\" debounce=\"500\" type=\"number\" readonly></b-form-input>\r\n          </b-form-group>\r\n\r\n          <b-form-group label=\"Количество\" label-for=\"name-input\" invalid-feedback=\"Количество должно быть больше 0\">\r\n            <b-form-input id=\"name-input\" v-model=\"data.amount\" placeholder=\"Введите количество\" debounce=\"500\"\r\n            :state=\"amountState\"\r\n              type=\"number\" required ></b-form-input>\r\n          </b-form-group>\r\n\r\n          <b-form-group label=\"Итоговая стоимость\" label-for=\"costPerDetail-input\" invalid-feedback=\"Неверный формат даты\">\r\n            <b-form-input id=\"costPerDetail-input\" v-model=\"costAll\" debounce=\"500\" type=\"number\" readonly></b-form-input>\r\n          </b-form-group>\r\n\r\n        </form>\r\n      </template>\r\n    </CustomModalComponent>\r\n  </div>\r\n</template>\r\n<script>\r\n\r\nimport CustomModalComponent from './CustomModalComponent.vue';\r\nimport CRUDService from \"@/services/CRUDService\";\r\n\r\nexport default {\r\n  name: \"SupplyModalComponent\",\r\n  components: {\r\n    CustomModalComponent\r\n  },\r\n  data() {\r\n    return {\r\n      suppliedDetailId: null,\r\n      supplierId: null,\r\n      suppliers: [],\r\n      loadedSuppliedDetails: [],\r\n      data: {\r\n        id: null,\r\n        date: new Date().format(\"yyyy-mm-dd\"),\r\n        amount: 0\r\n      }\r\n    }\r\n  },\r\n  props: {\r\n    title: {\r\n      type: String,\r\n      default: 'Редактирование записи'\r\n    },\r\n    submitHandler: {\r\n      type: Function,\r\n      default: function () { }\r\n    },\r\n    crud: {\r\n      type: CRUDService,\r\n      required: true\r\n    }\r\n  },\r\n  methods: {\r\n    async show(data) {\r\n      this.$refs[\"custom-modal\"].show(this.data);\r\n      await this.updateData();\r\n      if (data !== undefined) {\r\n        this.data.id = data.id;\r\n        this.data.entityId = data.entityId;\r\n        this.data.name = data.name;\r\n        this.data.date = data.date;\r\n        this.data.amount = data.amount;\r\n        this.supplierId = data.suppliedDetailData.supplier;\r\n        this.suppliedDetailId = data.suppliedParts;\r\n      }\r\n      else {\r\n        this.data.id = \"\";\r\n        this.data.date = new Date().format(\"yyyy-mm-dd\");\r\n        this.data.amount = 0;\r\n      }\r\n    },\r\n\r\n    close() {\r\n      this.$refs[\"custom-modal\"].close();\r\n    },\r\n\r\n    async updateData() {\r\n      await this.crud.getSuppliedDetails({\r\n        sort: {\r\n          by: \"cost\",\r\n          desc: false\r\n        },\r\n        perPage: 100\r\n      })\r\n        .then(items => {\r\n          this.loadedSuppliedDetails = items;\r\n          this.loadedSuppliedDetails.forEach(item => item.text = item.detailData.name + \" \" + String(item.cost));\r\n          if (this.suppliedDetailId == null && this.loadedSuppliedDetails.length > 0) {\r\n            this.suppliedDetailId = this.loadedSuppliedDetails[0].entityId;\r\n          }\r\n        });\r\n      \r\n      await this.crud.getSuppliers({\r\n        sort: {\r\n          by: \"name\",\r\n          desc: false\r\n        },\r\n        perPage: 100\r\n      })\r\n        .then(items => {\r\n          this.suppliers = items;\r\n          this.suppliers.forEach(item => item.text = item.name);\r\n          if (this.supplierId == null && this.suppliers.length > 0) {\r\n            this.supplierId = this.suppliers[0].entityId;\r\n          }\r\n        });\r\n    },\r\n\r\n    updateSuppliedData(supplierId) {\r\n      this.suppliedDetails = this.loadedSuppliedDetails.filter(element => element.entityId == supplierId);\r\n    },\r\n\r\n    submit: function (data, modalEvent) {\r\n      if (this.isValid) {\r\n        this.data.suppliedParts = this.suppliedDetailId;\r\n        this.data.suppliedDetailData = this.suppliedDetail;\r\n        this.data.amount = Number(this.data.amount);\r\n        this.submitHandler(this.data, modalEvent);\r\n      }\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    suppliedDetails: function(){\r\n      return this.loadedSuppliedDetails.filter(element => element.supplier == this.supplierId);\r\n    },\r\n    suppliedDetail: function(){\r\n      return this.suppliedDetails.find(element => element.entityId == this.suppliedDetailId);\r\n    },\r\n    costPerDetail: function(){\r\n      return this.suppliedDetail == null ? 0 : this.suppliedDetail.cost;\r\n    },\r\n    costAll: function(){\r\n      return this.suppliedDetail == null ? 0 : this.suppliedDetail.cost * this.data.amount;\r\n    },\r\n    \r\n    amountState: function() {\r\n      return this.data.amount > 0 && !isNaN(this.data.amount) ? null : false;\r\n    },\r\n    suppliedDetailState: function() {\r\n      return this.suppliedDetail == null ? false : null;\r\n    },\r\n    isValid: function() {\r\n      return this.amountState == null && this.suppliedDetailId != null;\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style></style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}