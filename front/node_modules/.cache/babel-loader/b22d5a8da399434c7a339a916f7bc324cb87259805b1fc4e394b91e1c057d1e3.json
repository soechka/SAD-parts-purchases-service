{"ast":null,"code":"import CustomModalComponent from \"./CustomModalComponent.vue\";\nimport CRUDService from \"@/services/CRUDService\";\nexport default {\n  name: \"StudentModalComponent\",\n  components: {\n    CustomModalComponent\n  },\n  data() {\n    return {\n      selectRole: \"user\",\n      data: {\n        login: \"\",\n        password: \"\"\n      }\n    };\n  },\n  props: {\n    title: {\n      type: String,\n      default: \"Редактирование записи\"\n    },\n    submitHandler: {\n      type: Function,\n      default: function () {}\n    },\n    crud: {\n      type: CRUDService,\n      required: true\n    }\n  },\n  methods: {\n    show(data) {\n      if (data !== undefined) {\n        this.data.password = \"lolkek\";\n        this.data.login = data.login;\n      } else {\n        this.data.password = \"\";\n        this.data.login = \"\";\n      }\n      this.$refs[\"custom-modal\"].show(this.data);\n    },\n    close() {\n      this.$refs[\"custom-modal\"].close();\n    },\n    submit: function (data, modalEvent) {\n      modalEvent.preventDefault();\n      if (this.isValid) {\n        this.data.isAdmin = this.selectRole == \"admin\";\n        this.submitHandler(this.data, modalEvent);\n      }\n    },\n    validateName(str) {\n      let res = /[a-zA-Z_0-9]+/.exec(str);\n      return res != null && res.length == 1 && res[0] == str ? null : false;\n    }\n  },\n  computed: {\n    loginState() {\n      return this.badUsernameMessage == null && this.validateName(this.data.login);\n    },\n    passwordState() {\n      return this.badPasswordMessage == null && 8 < this.data.password.length && this.data.password.length < 40 ? null : false;\n    },\n    isValid() {\n      return this.loginState == null && this.emailState == null && this.passwordState == null;\n    }\n  }\n};","map":{"version":3,"names":["CustomModalComponent","CRUDService","name","components","data","selectRole","login","password","props","title","type","String","default","submitHandler","Function","crud","required","methods","show","undefined","$refs","close","submit","modalEvent","preventDefault","isValid","isAdmin","validateName","str","res","exec","length","computed","loginState","badUsernameMessage","passwordState","badPasswordMessage","emailState"],"sources":["src/components/UserModalComponent.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <CustomModalComponent\r\n      ref=\"custom-modal\"\r\n      :okHandler=\"submit\"\r\n      :title=\"title\"\r\n    >\r\n      <template v-slot:body>\r\n        <form ref=\"form\">\r\n          <b-form-group\r\n            label=\"Логин\"\r\n            label-for=\"username-input\"\r\n            invalid-feedback=\"Неверный формат логина\"\r\n            :state=\"loginState\"\r\n          >\r\n            <b-form-input\r\n              id=\"username-input\"\r\n              v-model=\"data.login\"\r\n              :state=\"loginState\"\r\n              :update=\"badUsernameMessage = null\"\r\n              placeholder=\"Введите логин\"\r\n              debounce=\"500\"\r\n              required\r\n            ></b-form-input>\r\n          </b-form-group>\r\n\r\n          <b-form-group\r\n            label=\"Пароль\"\r\n            label-for=\"password-input\"\r\n            invalid-feedback=\"Пароль должен содержать больше 8\"\r\n            :state=\"passwordState\"\r\n          >\r\n            <b-form-input\r\n              id=\"password-input\"\r\n              v-model=\"data.password\"\r\n              :update=\"badPasswordMessage = null\"\r\n              :state=\"passwordState\"\r\n              placeholder=\"Введите пароль\"\r\n              debounce=\"500\"\r\n              type=\"password\"\r\n              required\r\n            ></b-form-input>\r\n          </b-form-group>\r\n\r\n          <b-form-group\r\n            label=\"Роль\"\r\n            label-for=\"role-radio\"\r\n          >\r\n            <b-form-radio-group\r\n              id=\"role-radio\"\r\n              v-model=\"selectRole\"\r\n            >\r\n              <b-form-radio value=\"user\">Пользователь</b-form-radio>\r\n              <b-form-radio value=\"admin\">Администратор</b-form-radio>\r\n            </b-form-radio-group>\r\n          </b-form-group>\r\n        </form>\r\n      </template>\r\n    </CustomModalComponent>\r\n  </div>\r\n</template>\r\n<script>\r\n\r\nimport CustomModalComponent from \"./CustomModalComponent.vue\";\r\nimport CRUDService from \"@/services/CRUDService\";\r\n\r\nexport default {\r\n  name: \"StudentModalComponent\",\r\n  components: {\r\n    CustomModalComponent\r\n  },\r\n  data() {\r\n    return {\r\n      selectRole: \"user\",\r\n      data: {\r\n        login: \"\",\r\n        password: \"\"\r\n      }\r\n    }\r\n  },\r\n  props: {\r\n    title: {\r\n      type: String,\r\n      default: \"Редактирование записи\"\r\n    },\r\n    submitHandler: {\r\n      type: Function,\r\n      default: function () { }\r\n    },\r\n    crud: {\r\n      type: CRUDService,\r\n      required: true\r\n    }\r\n  },\r\n  methods: {\r\n    show(data) {\r\n      if (data !== undefined) {\r\n        this.data.password = \"lolkek\";\r\n        this.data.login = data.login;\r\n      } else {\r\n        this.data.password = \"\";\r\n        this.data.login = \"\";\r\n      }\r\n\r\n      this.$refs[\"custom-modal\"].show(this.data);\r\n    },\r\n\r\n    close() {\r\n      this.$refs[\"custom-modal\"].close();\r\n    },\r\n\r\n    submit: function (data, modalEvent) {\r\n      modalEvent.preventDefault();\r\n      if (this.isValid) {\r\n        this.data.isAdmin = this.selectRole == \"admin\";\r\n        this.submitHandler(this.data, modalEvent);\r\n      }\r\n    },\r\n    validateName(str) {\r\n      let res = /[a-zA-Z_0-9]+/.exec(str);\r\n      return res != null && res.length == 1 && res[0] == str ? null : false;\r\n    }\r\n  },\r\n  computed: {\r\n    loginState() {\r\n      return this.badUsernameMessage == null && this.validateName(this.data.login);\r\n    },\r\n    passwordState() {\r\n      return this.badPasswordMessage == null && 8 < this.data.password.length && this.data.password.length < 40 ? null : false;\r\n    },\r\n    isValid() {\r\n      return this.loginState == null\r\n        && this.emailState == null\r\n        && this.passwordState == null;\r\n    },\r\n  }\r\n}\r\n</script>\r\n<style></style>"],"mappings":"AA+DA,OAAAA,oBAAA;AACA,OAAAC,WAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAH;EACA;EACAI,KAAA;IACA;MACAC,UAAA;MACAD,IAAA;QACAE,KAAA;QACAC,QAAA;MACA;IACA;EACA;EACAC,KAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAC,aAAA;MACAH,IAAA,EAAAI,QAAA;MACAF,OAAA,WAAAA,CAAA;IACA;IACAG,IAAA;MACAL,IAAA,EAAAT,WAAA;MACAe,QAAA;IACA;EACA;EACAC,OAAA;IACAC,KAAAd,IAAA;MACA,IAAAA,IAAA,KAAAe,SAAA;QACA,KAAAf,IAAA,CAAAG,QAAA;QACA,KAAAH,IAAA,CAAAE,KAAA,GAAAF,IAAA,CAAAE,KAAA;MACA;QACA,KAAAF,IAAA,CAAAG,QAAA;QACA,KAAAH,IAAA,CAAAE,KAAA;MACA;MAEA,KAAAc,KAAA,iBAAAF,IAAA,MAAAd,IAAA;IACA;IAEAiB,MAAA;MACA,KAAAD,KAAA,iBAAAC,KAAA;IACA;IAEAC,MAAA,WAAAA,CAAAlB,IAAA,EAAAmB,UAAA;MACAA,UAAA,CAAAC,cAAA;MACA,SAAAC,OAAA;QACA,KAAArB,IAAA,CAAAsB,OAAA,QAAArB,UAAA;QACA,KAAAQ,aAAA,MAAAT,IAAA,EAAAmB,UAAA;MACA;IACA;IACAI,aAAAC,GAAA;MACA,IAAAC,GAAA,mBAAAC,IAAA,CAAAF,GAAA;MACA,OAAAC,GAAA,YAAAA,GAAA,CAAAE,MAAA,SAAAF,GAAA,OAAAD,GAAA;IACA;EACA;EACAI,QAAA;IACAC,WAAA;MACA,YAAAC,kBAAA,iBAAAP,YAAA,MAAAvB,IAAA,CAAAE,KAAA;IACA;IACA6B,cAAA;MACA,YAAAC,kBAAA,qBAAAhC,IAAA,CAAAG,QAAA,CAAAwB,MAAA,SAAA3B,IAAA,CAAAG,QAAA,CAAAwB,MAAA;IACA;IACAN,QAAA;MACA,YAAAQ,UAAA,YACA,KAAAI,UAAA,YACA,KAAAF,aAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}