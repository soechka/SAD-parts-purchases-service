{"ast":null,"code":"import CustomModalComponent from \"./CustomModalComponent.vue\";\nimport CRUDService from \"@/services/CRUDService\";\nexport default {\n  name: \"SuppliedDetailModalComponent\",\n  components: {\n    CustomModalComponent\n  },\n  data() {\n    return {\n      supplierId: null,\n      detailId: null,\n      suppliers: [],\n      details: [],\n      data: {\n        id: \"\",\n        date: new Date().format(\"yyyy-mm-dd\"),\n        cost: 0\n      }\n    };\n  },\n  mounted() {},\n  props: {\n    title: {\n      type: String,\n      default: \"Редактирование записи\"\n    },\n    submitHandler: {\n      type: Function,\n      default: function () {}\n    },\n    crud: {\n      type: CRUDService,\n      required: true\n    }\n  },\n  methods: {\n    show(data) {\n      this.updateData();\n      if (data !== undefined) {\n        this.data.id = data.id;\n        this.data.entityId = data.entityId;\n        this.data.cost = data.cost;\n        this.data.date = data.date;\n        this.detailId = data.part;\n        this.supplierId = data.supplier;\n      } else {\n        this.data.id = \"\";\n        this.data.entityId = \"\";\n        this.data.cost = 0;\n        this.data.date = new Date().format(\"yyyy-mm-dd\");\n      }\n      console.log(this.data.date);\n      console.log(this.detailId);\n      this.$refs[\"custom-modal\"].show(this.data);\n    },\n    close() {\n      this.$refs[\"custom-modal\"].close();\n    },\n    updateData() {\n      this.crud.getSuppliers({\n        sort: {\n          by: \"name\",\n          desc: false\n        },\n        perPage: 100\n      }).then(items => {\n        this.suppliers = items;\n        this.suppliers.forEach(item => item.text = item.name + \" \" + item.address);\n        if (this.supplierId == null && this.suppliers.length > 0) {\n          this.supplierId = this.suppliers[0].entityId;\n        }\n        console.log(\"updateData suppliers\", this.suppliers);\n      });\n      this.crud.getDetails({\n        perPage: 100\n      }).then(items => {\n        this.details = items;\n        this.details.forEach(item => item.text = item.name + \" \" + item.partNumber);\n        if (this.detailId == null && this.details.length > 0) {\n          this.detailId = this.details[0].entityId;\n        }\n      });\n    },\n    submit: function (data, modalEvent) {\n      modalEvent.preventDefault();\n      if (this.isValid) {\n        console.log(this.details);\n        this.data.part = this.detailId;\n        this.data.supplier = this.supplierId;\n        this.data.supplierData = this.suppliers.find(s => s.entityId == this.supplierId);\n        this.data.detailData = this.details.find(d => d.entityId == this.detailId);\n        this.data.cost = Number(this.data.cost);\n        this.submitHandler(this.data, modalEvent);\n      }\n    }\n  },\n  computed: {\n    costState() {\n      return !isNaN(this.data.cost) && this.data.cost > 0 ? null : false;\n    },\n    isValid() {\n      return this.costState == null;\n    }\n  }\n};","map":{"version":3,"names":["CustomModalComponent","CRUDService","name","components","data","supplierId","detailId","suppliers","details","id","date","Date","format","cost","mounted","props","title","type","String","default","submitHandler","Function","crud","required","methods","show","updateData","undefined","entityId","part","supplier","console","log","$refs","close","getSuppliers","sort","by","desc","perPage","then","items","forEach","item","text","address","length","getDetails","partNumber","submit","modalEvent","preventDefault","isValid","supplierData","find","s","detailData","d","Number","computed","costState","isNaN"],"sources":["src/components/SuppliedDetailModalComponent.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <CustomModalComponent ref=\"custom-modal\" :okHandler=\"submit\" :title=\"title\">\r\n      <template v-slot:body>\r\n        <form ref=\"form\">\r\n          <b-form-group label=\"Цена\" label-for=\"name-input\" invalid-feedback=\"Цена должна быть больше 0\" :state=\"costState\">\r\n            <b-form-input id=\"name-input\" v-model=\"data.cost\" :state=\"costState\" placeholder=\"Введите цену\" debounce=\"500\"\r\n              type=\"number\" required></b-form-input>\r\n          </b-form-group>\r\n\r\n          <b-form-group label=\"Дата\" label-for=\"date-input\" invalid-feedback=\"Неверный формат даты\">\r\n            <b-form-input id=\"date-input\" v-model=\"data.date\" debounce=\"500\" type=\"date\" required></b-form-input>\r\n          </b-form-group>\r\n\r\n          <b-form-group label=\"Деталь\" label-for=\"detail-input\">\r\n            <b-form-select id=\"detail-input\" v-model=\"detailId\" :options=\"details\" text-field=\"text\" value-field=\"entityId\"\r\n              required></b-form-select>\r\n          </b-form-group>\r\n\r\n          <b-form-group label=\"Поставщик\" label-for=\"supplier-input\">\r\n            <b-form-select id=\"supplier-input\" v-model=\"supplierId\" :options=\"suppliers\" text-field=\"text\" value-field=\"entityId\"\r\n              required></b-form-select>\r\n          </b-form-group>\r\n        </form>\r\n      </template>\r\n    </CustomModalComponent>\r\n  </div>\r\n</template>\r\n<script>\r\nimport CustomModalComponent from \"./CustomModalComponent.vue\";\r\nimport CRUDService from \"@/services/CRUDService\";\r\n\r\nexport default {\r\n  name: \"SuppliedDetailModalComponent\",\r\n  components: {\r\n    CustomModalComponent\r\n  },\r\n  data() {\r\n    return {\r\n      supplierId: null,\r\n      detailId: null,\r\n      suppliers: [],\r\n      details: [],\r\n\r\n      data: {\r\n        id: \"\",\r\n        date: new Date().format(\"yyyy-mm-dd\"),\r\n        cost: 0,\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n\r\n  },\r\n  props: {\r\n    title: {\r\n      type: String,\r\n      default: \"Редактирование записи\"\r\n    },\r\n    submitHandler: {\r\n      type: Function,\r\n      default: function () { }\r\n    },\r\n    crud: {\r\n      type: CRUDService,\r\n      required: true\r\n    },\r\n  },\r\n  methods: {\r\n    show(data) {\r\n      this.updateData();\r\n\r\n      if (data !== undefined) {\r\n        this.data.id = data.id;\r\n        this.data.entityId = data.entityId;\r\n        this.data.cost = data.cost;\r\n        this.data.date = data.date;\r\n        this.detailId = data.part;\r\n        this.supplierId = data.supplier;\r\n      } else {\r\n        this.data.id = \"\";\r\n        this.data.entityId = \"\";\r\n        this.data.cost = 0;\r\n        this.data.date = new Date().format(\"yyyy-mm-dd\");\r\n      }\r\n      console.log(this.data.date);\r\n      console.log(this.detailId);\r\n      this.$refs[\"custom-modal\"].show(this.data);\r\n    },\r\n    close() {\r\n      this.$refs[\"custom-modal\"].close();\r\n    },\r\n\r\n    updateData() {\r\n      this.crud.getSuppliers({\r\n        sort: {\r\n          by: \"name\",\r\n          desc: false\r\n        },\r\n        perPage: 100\r\n      })\r\n      .then(items => {\r\n        this.suppliers = items;\r\n        this.suppliers.forEach(item => item.text = item.name + \" \" + item.address);\r\n        if (this.supplierId == null && this.suppliers.length > 0) {\r\n          this.supplierId = this.suppliers[0].entityId;\r\n        }\r\n        console.log(\"updateData suppliers\", this.suppliers);\r\n      });\r\n\r\n      this.crud.getDetails({perPage: 100})\r\n      .then(items => {\r\n        this.details = items;\r\n        this.details.forEach(item => item.text = item.name + \" \" + item.partNumber);\r\n        if (this.detailId == null && this.details.length > 0) {\r\n          this.detailId = this.details[0].entityId;\r\n        }\r\n      });\r\n    },\r\n\r\n    submit: function (data, modalEvent) {\r\n      modalEvent.preventDefault();\r\n      if (this.isValid) {\r\n        console.log(this.details);\r\n        this.data.part = this.detailId;\r\n        this.data.supplier = this.supplierId;\r\n        this.data.supplierData = this.suppliers.find(s => s.entityId == this.supplierId);\r\n        this.data.detailData = this.details.find(d => d.entityId == this.detailId);\r\n        this.data.cost = Number(this.data.cost);\r\n        this.submitHandler(this.data, modalEvent);\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    costState() {\r\n      return !isNaN(this.data.cost) && this.data.cost > 0 ? null : false;\r\n    },\r\n\r\n    isValid() {\r\n      return this.costState == null;\r\n    },\r\n  }\r\n}\r\n</script>\r\n<style></style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}