{"ast":null,"code":"import TableComponent from \"@/components/TableComponent.vue\";\nimport RemoveModalComponent from \"@/components/RemoveModalComponent.vue\";\nimport SupplyModalComponent from \"@/components/SupplyModalComponent.vue\";\nimport CRUDService from \"@/services/CRUDService\";\nimport MessageService from \"@/services/MessageService\";\nexport default {\n  name: \"SuppliesView\",\n  components: {\n    TableComponent,\n    RemoveModalComponent,\n    SupplyModalComponent\n  },\n  data() {\n    return {\n      fields: [{\n        key: \"date\",\n        sortable: true,\n        // filtrable: true,\n        label: \"Дата\",\n        formatter: value => value.split('T')[0]\n      }, {\n        key: \"detailData\",\n        // sortable: true,\n        // filtrable: true,\n        label: \"Деталь\",\n        formatter: value => value.name\n      }, {\n        key: \"supplierData\",\n        // sortable: true,\n        // filtrable: true,\n        label: \"Поставщик\",\n        formatter: value => value.name\n      }, {\n        key: \"amount\",\n        sortable: true,\n        filtrable: true,\n        label: \"Количество\"\n      }, {\n        key: \"suppliedDetailData\",\n        // sortable: true,\n        // filtrable: true,\n        label: \"Цена\",\n        formatter: value => value.cost\n      }, {\n        key: \"costAll\",\n        sortable: false,\n        filtrable: false,\n        label: \"Общая цена\"\n      }, {\n        key: \"actions\",\n        label: \"Действия\",\n        stickyColumn: true\n      }]\n    };\n  },\n  props: {\n    user: {\n      type: Object,\n      required: true\n    },\n    crud: {\n      type: CRUDService,\n      required: true\n    },\n    messageService: {\n      type: MessageService,\n      required: true\n    }\n  },\n  methods: {\n    supplyPresenter(data) {\n      return data.suppliedDetailData.detailData.name + \" \" + data.suppliedDetailData.supplierData.name;\n    },\n    addTableItemHandler() {\n      this.$refs[\"CreateItemModal\"].show();\n    },\n    removeTableItemHandler(item) {\n      this.$refs[\"RemoveItemModal\"].show(item);\n    },\n    editTableItemHandler(item) {\n      this.$refs[\"EditItemModal\"].show(item);\n    },\n    removeItem(item, modalEvent) {\n      modalEvent.preventDefault();\n      this.crud.removeSupply(item.entityId).then(() => {\n        this.$refs[\"RemoveItemModal\"].close();\n        this.messageService.showDelete(this.supplyPresenter(item));\n        this.$refs[\"table\"].update();\n      }).catch(err => {\n        this.messageService.showError(err.message);\n      });\n    },\n    addItem(item, modalEvent) {\n      modalEvent.preventDefault();\n      this.crud.addSupply(item).then(() => {\n        this.$refs[\"CreateItemModal\"].close();\n        this.messageService.showCreate(this.supplyPresenter(item));\n        this.$refs[\"table\"].update();\n      }).catch(err => {\n        this.messageService.showError(err.message);\n      });\n    },\n    updateItem(item, modalEvent) {\n      modalEvent.preventDefault();\n      this.crud.updateSupply(item.entityId, item).then(() => {\n        this.$refs[\"EditItemModal\"].close();\n        this.messageService.showUpdate(this.supplyPresenter(item));\n        this.$refs[\"table\"].update();\n      }).catch(err => {\n        this.messageService.showError(err.message);\n      });\n    },\n    async loadAllData(supply) {\n      let sp = await this.crud.getSuppliedDetail(supply.suppliedParts);\n      supply.detailData = await this.crud.getSupplier(sp.supplier);\n      supply.supplierData = await this.crud.getDetail(sp.part).then(p => supply.detail = p);\n      supply.costAll = supply.amount * sp.cost;\n      return supply;\n    },\n    dataProvider(ctx) {\n      return this.crud.getSupplies(ctx).then(items => {\n        console.log('asdfsadf', items);\n        items.forEach(element => {\n          element.supplierData = element.suppliedDetailData.supplierData;\n          element.detailData = element.suppliedDetailData.detailData;\n          element.costAll = element.amount * element.suppliedDetailData.cost;\n        });\n        return items;\n      }).catch(err => {\n        this.messageService.showError(err.message);\n        return err;\n      });\n    }\n  }\n};","map":{"version":3,"names":["TableComponent","RemoveModalComponent","SupplyModalComponent","CRUDService","MessageService","name","components","data","fields","key","sortable","label","formatter","value","split","filtrable","cost","stickyColumn","props","user","type","Object","required","crud","messageService","methods","supplyPresenter","suppliedDetailData","detailData","supplierData","addTableItemHandler","$refs","show","removeTableItemHandler","item","editTableItemHandler","removeItem","modalEvent","preventDefault","removeSupply","entityId","then","close","showDelete","update","catch","err","showError","message","addItem","addSupply","showCreate","updateItem","updateSupply","showUpdate","loadAllData","supply","sp","getSuppliedDetail","suppliedParts","getSupplier","supplier","getDetail","part","p","detail","costAll","amount","dataProvider","ctx","getSupplies","items","console","log","forEach","element"],"sources":["src/views/SuppliesView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <TableComponent\r\n      ref=\"table\"\r\n      :fields=\"fields\"\r\n      v-on:itemAdd=\"addTableItemHandler\"\r\n      v-on:itemRemove=\"removeTableItemHandler\"\r\n      v-on:itemEdit=\"editTableItemHandler\"\r\n      :dataProvider=\"dataProvider\"\r\n    ></TableComponent>\r\n    <div>\r\n      <RemoveModalComponent\r\n        ref=\"RemoveItemModal\"\r\n        :contentPresenter=\"value => supplyPresenter(value)\"\r\n        :okHandler=\"removeItem\"\r\n      ></RemoveModalComponent>\r\n\r\n      <SupplyModalComponent\r\n        ref=\"CreateItemModal\"\r\n        title=\"Создание записи o поставке\"\r\n        :submitHandler=\"addItem\"\r\n        :crud=\"crud\"\r\n      >\r\n      </SupplyModalComponent>\r\n\r\n      <SupplyModalComponent\r\n        ref=\"EditItemModal\"\r\n        title=\"Редактирование записи o поставке\"\r\n        :submitHandler=\"updateItem\"\r\n        :crud=\"crud\"\r\n      >\r\n      </SupplyModalComponent>\r\n    </div>\r\n  </div>\r\n</template>\r\n  \r\n<script>\r\nimport TableComponent from \"@/components/TableComponent.vue\"\r\nimport RemoveModalComponent from \"@/components/RemoveModalComponent.vue\"\r\nimport SupplyModalComponent from \"@/components/SupplyModalComponent.vue\"\r\nimport CRUDService from \"@/services/CRUDService\"\r\nimport MessageService from \"@/services/MessageService\"\r\n\r\nexport default {\r\n  name: \"SuppliesView\",\r\n  components: {\r\n    TableComponent,\r\n    RemoveModalComponent,\r\n    SupplyModalComponent\r\n  },\r\n  data() {\r\n    return {\r\n      fields: [\r\n        {\r\n          key: \"date\",\r\n          sortable: true,\r\n          // filtrable: true,\r\n          label: \"Дата\",\r\n          formatter: value => value.split('T')[0]\r\n        },\r\n        {\r\n          key: \"detailData\",\r\n          // sortable: true,\r\n          // filtrable: true,\r\n          label: \"Деталь\",\r\n          formatter: value => value.name\r\n        },\r\n        {\r\n          key: \"supplierData\",\r\n          // sortable: true,\r\n          // filtrable: true,\r\n          label: \"Поставщик\",\r\n          formatter: value => value.name\r\n        },\r\n        {\r\n          key: \"amount\",\r\n          sortable: true,\r\n          filtrable: true,\r\n          label: \"Количество\",\r\n        },\r\n        {\r\n          key: \"suppliedDetailData\",\r\n          // sortable: true,\r\n          // filtrable: true,\r\n          label: \"Цена\",\r\n          formatter: value => value.cost\r\n        },\r\n        {\r\n          key: \"costAll\",\r\n          sortable: false,\r\n          filtrable: false,\r\n          label: \"Общая цена\",\r\n        },\r\n        {\r\n          key: \"actions\",\r\n          label: \"Действия\",\r\n          stickyColumn: true\r\n        }\r\n      ],\r\n    }\r\n  },\r\n  props: {\r\n    user: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    crud: {\r\n      type: CRUDService,\r\n      required: true\r\n    },\r\n    messageService: {\r\n      type: MessageService,\r\n      required: true\r\n    }\r\n  },\r\n  methods: {\r\n    supplyPresenter(data){\r\n      return data.suppliedDetailData.detailData.name + \" \" + data.suppliedDetailData.supplierData.name;\r\n    },\r\n\r\n    addTableItemHandler() {\r\n      this.$refs[\"CreateItemModal\"].show();\r\n    },\r\n    removeTableItemHandler(item) {\r\n      this.$refs[\"RemoveItemModal\"].show(item);\r\n    },\r\n    editTableItemHandler(item) {\r\n      this.$refs[\"EditItemModal\"].show(item);\r\n    },\r\n\r\n    removeItem(item, modalEvent) {\r\n      modalEvent.preventDefault();\r\n\r\n      this.crud.removeSupply(item.entityId)\r\n        .then(() => {\r\n          this.$refs[\"RemoveItemModal\"].close();\r\n          this.messageService.showDelete(this.supplyPresenter(item));\r\n          this.$refs[\"table\"].update();\r\n        })\r\n        .catch(err => {\r\n          this.messageService.showError(err.message);\r\n        });\r\n    },\r\n\r\n    addItem(item, modalEvent) {\r\n      modalEvent.preventDefault();\r\n\r\n      this.crud.addSupply(item)\r\n        .then(() => {\r\n          this.$refs[\"CreateItemModal\"].close();\r\n          this.messageService.showCreate(this.supplyPresenter(item));\r\n          this.$refs[\"table\"].update();\r\n        })\r\n        .catch(err => {\r\n          this.messageService.showError(err.message);\r\n        });\r\n    },\r\n\r\n    updateItem(item, modalEvent) {\r\n      modalEvent.preventDefault();\r\n\r\n      this.crud.updateSupply(item.entityId, item)\r\n        .then(() => {\r\n          this.$refs[\"EditItemModal\"].close();\r\n          this.messageService.showUpdate(this.supplyPresenter(item));\r\n          this.$refs[\"table\"].update();\r\n        })\r\n        .catch(err => {\r\n          this.messageService.showError(err.message);\r\n        });\r\n    },\r\n\r\n    async loadAllData(supply){\r\n      let sp = await this.crud.getSuppliedDetail(supply.suppliedParts);\r\n      supply.detailData = await this.crud.getSupplier(sp.supplier);\r\n      supply.supplierData = await this.crud.getDetail(sp.part).then(p => supply.detail = p);\r\n      supply.costAll = supply.amount * sp.cost;\r\n      return supply;\r\n    },\r\n\r\n    dataProvider(ctx) {\r\n      return this.crud.getSupplies(ctx).then(items =>{\r\n        console.log('asdfsadf', items);\r\n        items.forEach(element => {\r\n          element.supplierData = element.suppliedDetailData.supplierData;\r\n          element.detailData = element.suppliedDetailData.detailData;\r\n          element.costAll = element.amount * element.suppliedDetailData.cost;\r\n        });\r\n        return items;\r\n      })\r\n      .catch(err => {\r\n        this.messageService.showError(err.message);\r\n        return err;\r\n      });\r\n    },\r\n  }\r\n}\r\n</script>\r\n  \r\n<style scoped></style>\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}